// Code generated by go-swagger; DO NOT EDIT.

package remote_process_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bjornm82/go-swagger-nifi/models"
)

// GetStateRemoteProcessGroupsReader is a Reader for the GetStateRemoteProcessGroups structure.
type GetStateRemoteProcessGroupsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetStateRemoteProcessGroupsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetStateRemoteProcessGroupsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetStateRemoteProcessGroupsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetStateRemoteProcessGroupsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetStateRemoteProcessGroupsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetStateRemoteProcessGroupsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetStateRemoteProcessGroupsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetStateRemoteProcessGroupsOK creates a GetStateRemoteProcessGroupsOK with default headers values
func NewGetStateRemoteProcessGroupsOK() *GetStateRemoteProcessGroupsOK {
	return &GetStateRemoteProcessGroupsOK{}
}

/*GetStateRemoteProcessGroupsOK handles this case with default header values.

successful operation
*/
type GetStateRemoteProcessGroupsOK struct {
	Payload *models.ComponentStateEntity
}

func (o *GetStateRemoteProcessGroupsOK) Error() string {
	return fmt.Sprintf("[GET /remote-process-groups/{id}/state][%d] getStateRemoteProcessGroupsOK  %+v", 200, o.Payload)
}

func (o *GetStateRemoteProcessGroupsOK) GetPayload() *models.ComponentStateEntity {
	return o.Payload
}

func (o *GetStateRemoteProcessGroupsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ComponentStateEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStateRemoteProcessGroupsBadRequest creates a GetStateRemoteProcessGroupsBadRequest with default headers values
func NewGetStateRemoteProcessGroupsBadRequest() *GetStateRemoteProcessGroupsBadRequest {
	return &GetStateRemoteProcessGroupsBadRequest{}
}

/*GetStateRemoteProcessGroupsBadRequest handles this case with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type GetStateRemoteProcessGroupsBadRequest struct {
}

func (o *GetStateRemoteProcessGroupsBadRequest) Error() string {
	return fmt.Sprintf("[GET /remote-process-groups/{id}/state][%d] getStateRemoteProcessGroupsBadRequest ", 400)
}

func (o *GetStateRemoteProcessGroupsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetStateRemoteProcessGroupsUnauthorized creates a GetStateRemoteProcessGroupsUnauthorized with default headers values
func NewGetStateRemoteProcessGroupsUnauthorized() *GetStateRemoteProcessGroupsUnauthorized {
	return &GetStateRemoteProcessGroupsUnauthorized{}
}

/*GetStateRemoteProcessGroupsUnauthorized handles this case with default header values.

Client could not be authenticated.
*/
type GetStateRemoteProcessGroupsUnauthorized struct {
}

func (o *GetStateRemoteProcessGroupsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /remote-process-groups/{id}/state][%d] getStateRemoteProcessGroupsUnauthorized ", 401)
}

func (o *GetStateRemoteProcessGroupsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetStateRemoteProcessGroupsForbidden creates a GetStateRemoteProcessGroupsForbidden with default headers values
func NewGetStateRemoteProcessGroupsForbidden() *GetStateRemoteProcessGroupsForbidden {
	return &GetStateRemoteProcessGroupsForbidden{}
}

/*GetStateRemoteProcessGroupsForbidden handles this case with default header values.

Client is not authorized to make this request.
*/
type GetStateRemoteProcessGroupsForbidden struct {
}

func (o *GetStateRemoteProcessGroupsForbidden) Error() string {
	return fmt.Sprintf("[GET /remote-process-groups/{id}/state][%d] getStateRemoteProcessGroupsForbidden ", 403)
}

func (o *GetStateRemoteProcessGroupsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetStateRemoteProcessGroupsNotFound creates a GetStateRemoteProcessGroupsNotFound with default headers values
func NewGetStateRemoteProcessGroupsNotFound() *GetStateRemoteProcessGroupsNotFound {
	return &GetStateRemoteProcessGroupsNotFound{}
}

/*GetStateRemoteProcessGroupsNotFound handles this case with default header values.

The specified resource could not be found.
*/
type GetStateRemoteProcessGroupsNotFound struct {
}

func (o *GetStateRemoteProcessGroupsNotFound) Error() string {
	return fmt.Sprintf("[GET /remote-process-groups/{id}/state][%d] getStateRemoteProcessGroupsNotFound ", 404)
}

func (o *GetStateRemoteProcessGroupsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetStateRemoteProcessGroupsConflict creates a GetStateRemoteProcessGroupsConflict with default headers values
func NewGetStateRemoteProcessGroupsConflict() *GetStateRemoteProcessGroupsConflict {
	return &GetStateRemoteProcessGroupsConflict{}
}

/*GetStateRemoteProcessGroupsConflict handles this case with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type GetStateRemoteProcessGroupsConflict struct {
}

func (o *GetStateRemoteProcessGroupsConflict) Error() string {
	return fmt.Sprintf("[GET /remote-process-groups/{id}/state][%d] getStateRemoteProcessGroupsConflict ", 409)
}

func (o *GetStateRemoteProcessGroupsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
