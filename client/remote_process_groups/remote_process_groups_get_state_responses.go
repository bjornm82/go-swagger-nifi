// Code generated by go-swagger; DO NOT EDIT.

package remote_process_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/bjornm82/swagger-nifi/models"
)

// RemoteProcessGroupsGetStateReader is a Reader for the RemoteProcessGroupsGetState structure.
type RemoteProcessGroupsGetStateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RemoteProcessGroupsGetStateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewRemoteProcessGroupsGetStateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewRemoteProcessGroupsGetStateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewRemoteProcessGroupsGetStateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewRemoteProcessGroupsGetStateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewRemoteProcessGroupsGetStateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewRemoteProcessGroupsGetStateConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewRemoteProcessGroupsGetStateOK creates a RemoteProcessGroupsGetStateOK with default headers values
func NewRemoteProcessGroupsGetStateOK() *RemoteProcessGroupsGetStateOK {
	return &RemoteProcessGroupsGetStateOK{}
}

/*RemoteProcessGroupsGetStateOK handles this case with default header values.

successful operation
*/
type RemoteProcessGroupsGetStateOK struct {
	Payload *models.ComponentStateEntity
}

func (o *RemoteProcessGroupsGetStateOK) Error() string {
	return fmt.Sprintf("[GET /remote-process-groups/{id}/state][%d] remoteProcessGroupsGetStateOK  %+v", 200, o.Payload)
}

func (o *RemoteProcessGroupsGetStateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ComponentStateEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRemoteProcessGroupsGetStateBadRequest creates a RemoteProcessGroupsGetStateBadRequest with default headers values
func NewRemoteProcessGroupsGetStateBadRequest() *RemoteProcessGroupsGetStateBadRequest {
	return &RemoteProcessGroupsGetStateBadRequest{}
}

/*RemoteProcessGroupsGetStateBadRequest handles this case with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type RemoteProcessGroupsGetStateBadRequest struct {
}

func (o *RemoteProcessGroupsGetStateBadRequest) Error() string {
	return fmt.Sprintf("[GET /remote-process-groups/{id}/state][%d] remoteProcessGroupsGetStateBadRequest ", 400)
}

func (o *RemoteProcessGroupsGetStateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoteProcessGroupsGetStateUnauthorized creates a RemoteProcessGroupsGetStateUnauthorized with default headers values
func NewRemoteProcessGroupsGetStateUnauthorized() *RemoteProcessGroupsGetStateUnauthorized {
	return &RemoteProcessGroupsGetStateUnauthorized{}
}

/*RemoteProcessGroupsGetStateUnauthorized handles this case with default header values.

Client could not be authenticated.
*/
type RemoteProcessGroupsGetStateUnauthorized struct {
}

func (o *RemoteProcessGroupsGetStateUnauthorized) Error() string {
	return fmt.Sprintf("[GET /remote-process-groups/{id}/state][%d] remoteProcessGroupsGetStateUnauthorized ", 401)
}

func (o *RemoteProcessGroupsGetStateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoteProcessGroupsGetStateForbidden creates a RemoteProcessGroupsGetStateForbidden with default headers values
func NewRemoteProcessGroupsGetStateForbidden() *RemoteProcessGroupsGetStateForbidden {
	return &RemoteProcessGroupsGetStateForbidden{}
}

/*RemoteProcessGroupsGetStateForbidden handles this case with default header values.

Client is not authorized to make this request.
*/
type RemoteProcessGroupsGetStateForbidden struct {
}

func (o *RemoteProcessGroupsGetStateForbidden) Error() string {
	return fmt.Sprintf("[GET /remote-process-groups/{id}/state][%d] remoteProcessGroupsGetStateForbidden ", 403)
}

func (o *RemoteProcessGroupsGetStateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoteProcessGroupsGetStateNotFound creates a RemoteProcessGroupsGetStateNotFound with default headers values
func NewRemoteProcessGroupsGetStateNotFound() *RemoteProcessGroupsGetStateNotFound {
	return &RemoteProcessGroupsGetStateNotFound{}
}

/*RemoteProcessGroupsGetStateNotFound handles this case with default header values.

The specified resource could not be found.
*/
type RemoteProcessGroupsGetStateNotFound struct {
}

func (o *RemoteProcessGroupsGetStateNotFound) Error() string {
	return fmt.Sprintf("[GET /remote-process-groups/{id}/state][%d] remoteProcessGroupsGetStateNotFound ", 404)
}

func (o *RemoteProcessGroupsGetStateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoteProcessGroupsGetStateConflict creates a RemoteProcessGroupsGetStateConflict with default headers values
func NewRemoteProcessGroupsGetStateConflict() *RemoteProcessGroupsGetStateConflict {
	return &RemoteProcessGroupsGetStateConflict{}
}

/*RemoteProcessGroupsGetStateConflict handles this case with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type RemoteProcessGroupsGetStateConflict struct {
}

func (o *RemoteProcessGroupsGetStateConflict) Error() string {
	return fmt.Sprintf("[GET /remote-process-groups/{id}/state][%d] remoteProcessGroupsGetStateConflict ", 409)
}

func (o *RemoteProcessGroupsGetStateConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
