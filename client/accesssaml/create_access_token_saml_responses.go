// Code generated by go-swagger; DO NOT EDIT.

package accesssaml

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// CreateAccessTokenSamlReader is a Reader for the CreateAccessTokenSaml structure.
type CreateAccessTokenSamlReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateAccessTokenSamlReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateAccessTokenSamlOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateAccessTokenSamlBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateAccessTokenSamlForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateAccessTokenSamlConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateAccessTokenSamlInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateAccessTokenSamlOK creates a CreateAccessTokenSamlOK with default headers values
func NewCreateAccessTokenSamlOK() *CreateAccessTokenSamlOK {
	return &CreateAccessTokenSamlOK{}
}

/*CreateAccessTokenSamlOK handles this case with default header values.

successful operation
*/
type CreateAccessTokenSamlOK struct {
	Payload string
}

func (o *CreateAccessTokenSamlOK) Error() string {
	return fmt.Sprintf("[POST /access/saml/token][%d] createAccessTokenSamlOK  %+v", 200, o.Payload)
}

func (o *CreateAccessTokenSamlOK) GetPayload() string {
	return o.Payload
}

func (o *CreateAccessTokenSamlOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAccessTokenSamlBadRequest creates a CreateAccessTokenSamlBadRequest with default headers values
func NewCreateAccessTokenSamlBadRequest() *CreateAccessTokenSamlBadRequest {
	return &CreateAccessTokenSamlBadRequest{}
}

/*CreateAccessTokenSamlBadRequest handles this case with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type CreateAccessTokenSamlBadRequest struct {
}

func (o *CreateAccessTokenSamlBadRequest) Error() string {
	return fmt.Sprintf("[POST /access/saml/token][%d] createAccessTokenSamlBadRequest ", 400)
}

func (o *CreateAccessTokenSamlBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateAccessTokenSamlForbidden creates a CreateAccessTokenSamlForbidden with default headers values
func NewCreateAccessTokenSamlForbidden() *CreateAccessTokenSamlForbidden {
	return &CreateAccessTokenSamlForbidden{}
}

/*CreateAccessTokenSamlForbidden handles this case with default header values.

Client is not authorized to make this request.
*/
type CreateAccessTokenSamlForbidden struct {
}

func (o *CreateAccessTokenSamlForbidden) Error() string {
	return fmt.Sprintf("[POST /access/saml/token][%d] createAccessTokenSamlForbidden ", 403)
}

func (o *CreateAccessTokenSamlForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateAccessTokenSamlConflict creates a CreateAccessTokenSamlConflict with default headers values
func NewCreateAccessTokenSamlConflict() *CreateAccessTokenSamlConflict {
	return &CreateAccessTokenSamlConflict{}
}

/*CreateAccessTokenSamlConflict handles this case with default header values.

Unable to create access token because NiFi is not in the appropriate state. (i.e. may not be configured to support username/password login.
*/
type CreateAccessTokenSamlConflict struct {
}

func (o *CreateAccessTokenSamlConflict) Error() string {
	return fmt.Sprintf("[POST /access/saml/token][%d] createAccessTokenSamlConflict ", 409)
}

func (o *CreateAccessTokenSamlConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateAccessTokenSamlInternalServerError creates a CreateAccessTokenSamlInternalServerError with default headers values
func NewCreateAccessTokenSamlInternalServerError() *CreateAccessTokenSamlInternalServerError {
	return &CreateAccessTokenSamlInternalServerError{}
}

/*CreateAccessTokenSamlInternalServerError handles this case with default header values.

Unable to create access token because an unexpected error occurred.
*/
type CreateAccessTokenSamlInternalServerError struct {
}

func (o *CreateAccessTokenSamlInternalServerError) Error() string {
	return fmt.Sprintf("[POST /access/saml/token][%d] createAccessTokenSamlInternalServerError ", 500)
}

func (o *CreateAccessTokenSamlInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
