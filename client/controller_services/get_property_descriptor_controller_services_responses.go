// Code generated by go-swagger; DO NOT EDIT.

package controller_services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bjornm82/go-swagger-nifi/models"
)

// GetPropertyDescriptorControllerServicesReader is a Reader for the GetPropertyDescriptorControllerServices structure.
type GetPropertyDescriptorControllerServicesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPropertyDescriptorControllerServicesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPropertyDescriptorControllerServicesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetPropertyDescriptorControllerServicesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetPropertyDescriptorControllerServicesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetPropertyDescriptorControllerServicesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetPropertyDescriptorControllerServicesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetPropertyDescriptorControllerServicesConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetPropertyDescriptorControllerServicesOK creates a GetPropertyDescriptorControllerServicesOK with default headers values
func NewGetPropertyDescriptorControllerServicesOK() *GetPropertyDescriptorControllerServicesOK {
	return &GetPropertyDescriptorControllerServicesOK{}
}

/*GetPropertyDescriptorControllerServicesOK handles this case with default header values.

successful operation
*/
type GetPropertyDescriptorControllerServicesOK struct {
	Payload *models.PropertyDescriptorEntity
}

func (o *GetPropertyDescriptorControllerServicesOK) Error() string {
	return fmt.Sprintf("[GET /controller-services/{id}/descriptors][%d] getPropertyDescriptorControllerServicesOK  %+v", 200, o.Payload)
}

func (o *GetPropertyDescriptorControllerServicesOK) GetPayload() *models.PropertyDescriptorEntity {
	return o.Payload
}

func (o *GetPropertyDescriptorControllerServicesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PropertyDescriptorEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPropertyDescriptorControllerServicesBadRequest creates a GetPropertyDescriptorControllerServicesBadRequest with default headers values
func NewGetPropertyDescriptorControllerServicesBadRequest() *GetPropertyDescriptorControllerServicesBadRequest {
	return &GetPropertyDescriptorControllerServicesBadRequest{}
}

/*GetPropertyDescriptorControllerServicesBadRequest handles this case with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type GetPropertyDescriptorControllerServicesBadRequest struct {
}

func (o *GetPropertyDescriptorControllerServicesBadRequest) Error() string {
	return fmt.Sprintf("[GET /controller-services/{id}/descriptors][%d] getPropertyDescriptorControllerServicesBadRequest ", 400)
}

func (o *GetPropertyDescriptorControllerServicesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPropertyDescriptorControllerServicesUnauthorized creates a GetPropertyDescriptorControllerServicesUnauthorized with default headers values
func NewGetPropertyDescriptorControllerServicesUnauthorized() *GetPropertyDescriptorControllerServicesUnauthorized {
	return &GetPropertyDescriptorControllerServicesUnauthorized{}
}

/*GetPropertyDescriptorControllerServicesUnauthorized handles this case with default header values.

Client could not be authenticated.
*/
type GetPropertyDescriptorControllerServicesUnauthorized struct {
}

func (o *GetPropertyDescriptorControllerServicesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /controller-services/{id}/descriptors][%d] getPropertyDescriptorControllerServicesUnauthorized ", 401)
}

func (o *GetPropertyDescriptorControllerServicesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPropertyDescriptorControllerServicesForbidden creates a GetPropertyDescriptorControllerServicesForbidden with default headers values
func NewGetPropertyDescriptorControllerServicesForbidden() *GetPropertyDescriptorControllerServicesForbidden {
	return &GetPropertyDescriptorControllerServicesForbidden{}
}

/*GetPropertyDescriptorControllerServicesForbidden handles this case with default header values.

Client is not authorized to make this request.
*/
type GetPropertyDescriptorControllerServicesForbidden struct {
}

func (o *GetPropertyDescriptorControllerServicesForbidden) Error() string {
	return fmt.Sprintf("[GET /controller-services/{id}/descriptors][%d] getPropertyDescriptorControllerServicesForbidden ", 403)
}

func (o *GetPropertyDescriptorControllerServicesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPropertyDescriptorControllerServicesNotFound creates a GetPropertyDescriptorControllerServicesNotFound with default headers values
func NewGetPropertyDescriptorControllerServicesNotFound() *GetPropertyDescriptorControllerServicesNotFound {
	return &GetPropertyDescriptorControllerServicesNotFound{}
}

/*GetPropertyDescriptorControllerServicesNotFound handles this case with default header values.

The specified resource could not be found.
*/
type GetPropertyDescriptorControllerServicesNotFound struct {
}

func (o *GetPropertyDescriptorControllerServicesNotFound) Error() string {
	return fmt.Sprintf("[GET /controller-services/{id}/descriptors][%d] getPropertyDescriptorControllerServicesNotFound ", 404)
}

func (o *GetPropertyDescriptorControllerServicesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPropertyDescriptorControllerServicesConflict creates a GetPropertyDescriptorControllerServicesConflict with default headers values
func NewGetPropertyDescriptorControllerServicesConflict() *GetPropertyDescriptorControllerServicesConflict {
	return &GetPropertyDescriptorControllerServicesConflict{}
}

/*GetPropertyDescriptorControllerServicesConflict handles this case with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type GetPropertyDescriptorControllerServicesConflict struct {
}

func (o *GetPropertyDescriptorControllerServicesConflict) Error() string {
	return fmt.Sprintf("[GET /controller-services/{id}/descriptors][%d] getPropertyDescriptorControllerServicesConflict ", 409)
}

func (o *GetPropertyDescriptorControllerServicesConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
