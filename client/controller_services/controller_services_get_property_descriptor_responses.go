// Code generated by go-swagger; DO NOT EDIT.

package controller_services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/bjornm82/go-swagger-nifi/models"
)

// ControllerServicesGetPropertyDescriptorReader is a Reader for the ControllerServicesGetPropertyDescriptor structure.
type ControllerServicesGetPropertyDescriptorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ControllerServicesGetPropertyDescriptorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewControllerServicesGetPropertyDescriptorOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewControllerServicesGetPropertyDescriptorBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewControllerServicesGetPropertyDescriptorUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewControllerServicesGetPropertyDescriptorForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewControllerServicesGetPropertyDescriptorNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewControllerServicesGetPropertyDescriptorConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewControllerServicesGetPropertyDescriptorOK creates a ControllerServicesGetPropertyDescriptorOK with default headers values
func NewControllerServicesGetPropertyDescriptorOK() *ControllerServicesGetPropertyDescriptorOK {
	return &ControllerServicesGetPropertyDescriptorOK{}
}

/*ControllerServicesGetPropertyDescriptorOK handles this case with default header values.

successful operation
*/
type ControllerServicesGetPropertyDescriptorOK struct {
	Payload *models.PropertyDescriptorEntity
}

func (o *ControllerServicesGetPropertyDescriptorOK) Error() string {
	return fmt.Sprintf("[GET /controller-services/{id}/descriptors][%d] controllerServicesGetPropertyDescriptorOK  %+v", 200, o.Payload)
}

func (o *ControllerServicesGetPropertyDescriptorOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PropertyDescriptorEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewControllerServicesGetPropertyDescriptorBadRequest creates a ControllerServicesGetPropertyDescriptorBadRequest with default headers values
func NewControllerServicesGetPropertyDescriptorBadRequest() *ControllerServicesGetPropertyDescriptorBadRequest {
	return &ControllerServicesGetPropertyDescriptorBadRequest{}
}

/*ControllerServicesGetPropertyDescriptorBadRequest handles this case with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type ControllerServicesGetPropertyDescriptorBadRequest struct {
}

func (o *ControllerServicesGetPropertyDescriptorBadRequest) Error() string {
	return fmt.Sprintf("[GET /controller-services/{id}/descriptors][%d] controllerServicesGetPropertyDescriptorBadRequest ", 400)
}

func (o *ControllerServicesGetPropertyDescriptorBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewControllerServicesGetPropertyDescriptorUnauthorized creates a ControllerServicesGetPropertyDescriptorUnauthorized with default headers values
func NewControllerServicesGetPropertyDescriptorUnauthorized() *ControllerServicesGetPropertyDescriptorUnauthorized {
	return &ControllerServicesGetPropertyDescriptorUnauthorized{}
}

/*ControllerServicesGetPropertyDescriptorUnauthorized handles this case with default header values.

Client could not be authenticated.
*/
type ControllerServicesGetPropertyDescriptorUnauthorized struct {
}

func (o *ControllerServicesGetPropertyDescriptorUnauthorized) Error() string {
	return fmt.Sprintf("[GET /controller-services/{id}/descriptors][%d] controllerServicesGetPropertyDescriptorUnauthorized ", 401)
}

func (o *ControllerServicesGetPropertyDescriptorUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewControllerServicesGetPropertyDescriptorForbidden creates a ControllerServicesGetPropertyDescriptorForbidden with default headers values
func NewControllerServicesGetPropertyDescriptorForbidden() *ControllerServicesGetPropertyDescriptorForbidden {
	return &ControllerServicesGetPropertyDescriptorForbidden{}
}

/*ControllerServicesGetPropertyDescriptorForbidden handles this case with default header values.

Client is not authorized to make this request.
*/
type ControllerServicesGetPropertyDescriptorForbidden struct {
}

func (o *ControllerServicesGetPropertyDescriptorForbidden) Error() string {
	return fmt.Sprintf("[GET /controller-services/{id}/descriptors][%d] controllerServicesGetPropertyDescriptorForbidden ", 403)
}

func (o *ControllerServicesGetPropertyDescriptorForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewControllerServicesGetPropertyDescriptorNotFound creates a ControllerServicesGetPropertyDescriptorNotFound with default headers values
func NewControllerServicesGetPropertyDescriptorNotFound() *ControllerServicesGetPropertyDescriptorNotFound {
	return &ControllerServicesGetPropertyDescriptorNotFound{}
}

/*ControllerServicesGetPropertyDescriptorNotFound handles this case with default header values.

The specified resource could not be found.
*/
type ControllerServicesGetPropertyDescriptorNotFound struct {
}

func (o *ControllerServicesGetPropertyDescriptorNotFound) Error() string {
	return fmt.Sprintf("[GET /controller-services/{id}/descriptors][%d] controllerServicesGetPropertyDescriptorNotFound ", 404)
}

func (o *ControllerServicesGetPropertyDescriptorNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewControllerServicesGetPropertyDescriptorConflict creates a ControllerServicesGetPropertyDescriptorConflict with default headers values
func NewControllerServicesGetPropertyDescriptorConflict() *ControllerServicesGetPropertyDescriptorConflict {
	return &ControllerServicesGetPropertyDescriptorConflict{}
}

/*ControllerServicesGetPropertyDescriptorConflict handles this case with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type ControllerServicesGetPropertyDescriptorConflict struct {
}

func (o *ControllerServicesGetPropertyDescriptorConflict) Error() string {
	return fmt.Sprintf("[GET /controller-services/{id}/descriptors][%d] controllerServicesGetPropertyDescriptorConflict ", 409)
}

func (o *ControllerServicesGetPropertyDescriptorConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
