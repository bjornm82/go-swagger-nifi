// Code generated by go-swagger; DO NOT EDIT.

package controller_services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/bjornm82/swagger-nifi/models"
)

// ControllerServiceGetPropertyDescriptorReader is a Reader for the ControllerServiceGetPropertyDescriptor structure.
type ControllerServiceGetPropertyDescriptorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ControllerServiceGetPropertyDescriptorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewControllerServiceGetPropertyDescriptorOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewControllerServiceGetPropertyDescriptorBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewControllerServiceGetPropertyDescriptorUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewControllerServiceGetPropertyDescriptorForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewControllerServiceGetPropertyDescriptorNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewControllerServiceGetPropertyDescriptorConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewControllerServiceGetPropertyDescriptorOK creates a ControllerServiceGetPropertyDescriptorOK with default headers values
func NewControllerServiceGetPropertyDescriptorOK() *ControllerServiceGetPropertyDescriptorOK {
	return &ControllerServiceGetPropertyDescriptorOK{}
}

/*ControllerServiceGetPropertyDescriptorOK handles this case with default header values.

successful operation
*/
type ControllerServiceGetPropertyDescriptorOK struct {
	Payload *models.PropertyDescriptorEntity
}

func (o *ControllerServiceGetPropertyDescriptorOK) Error() string {
	return fmt.Sprintf("[GET /controller-services/{id}/descriptors][%d] controllerServiceGetPropertyDescriptorOK  %+v", 200, o.Payload)
}

func (o *ControllerServiceGetPropertyDescriptorOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PropertyDescriptorEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewControllerServiceGetPropertyDescriptorBadRequest creates a ControllerServiceGetPropertyDescriptorBadRequest with default headers values
func NewControllerServiceGetPropertyDescriptorBadRequest() *ControllerServiceGetPropertyDescriptorBadRequest {
	return &ControllerServiceGetPropertyDescriptorBadRequest{}
}

/*ControllerServiceGetPropertyDescriptorBadRequest handles this case with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type ControllerServiceGetPropertyDescriptorBadRequest struct {
}

func (o *ControllerServiceGetPropertyDescriptorBadRequest) Error() string {
	return fmt.Sprintf("[GET /controller-services/{id}/descriptors][%d] controllerServiceGetPropertyDescriptorBadRequest ", 400)
}

func (o *ControllerServiceGetPropertyDescriptorBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewControllerServiceGetPropertyDescriptorUnauthorized creates a ControllerServiceGetPropertyDescriptorUnauthorized with default headers values
func NewControllerServiceGetPropertyDescriptorUnauthorized() *ControllerServiceGetPropertyDescriptorUnauthorized {
	return &ControllerServiceGetPropertyDescriptorUnauthorized{}
}

/*ControllerServiceGetPropertyDescriptorUnauthorized handles this case with default header values.

Client could not be authenticated.
*/
type ControllerServiceGetPropertyDescriptorUnauthorized struct {
}

func (o *ControllerServiceGetPropertyDescriptorUnauthorized) Error() string {
	return fmt.Sprintf("[GET /controller-services/{id}/descriptors][%d] controllerServiceGetPropertyDescriptorUnauthorized ", 401)
}

func (o *ControllerServiceGetPropertyDescriptorUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewControllerServiceGetPropertyDescriptorForbidden creates a ControllerServiceGetPropertyDescriptorForbidden with default headers values
func NewControllerServiceGetPropertyDescriptorForbidden() *ControllerServiceGetPropertyDescriptorForbidden {
	return &ControllerServiceGetPropertyDescriptorForbidden{}
}

/*ControllerServiceGetPropertyDescriptorForbidden handles this case with default header values.

Client is not authorized to make this request.
*/
type ControllerServiceGetPropertyDescriptorForbidden struct {
}

func (o *ControllerServiceGetPropertyDescriptorForbidden) Error() string {
	return fmt.Sprintf("[GET /controller-services/{id}/descriptors][%d] controllerServiceGetPropertyDescriptorForbidden ", 403)
}

func (o *ControllerServiceGetPropertyDescriptorForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewControllerServiceGetPropertyDescriptorNotFound creates a ControllerServiceGetPropertyDescriptorNotFound with default headers values
func NewControllerServiceGetPropertyDescriptorNotFound() *ControllerServiceGetPropertyDescriptorNotFound {
	return &ControllerServiceGetPropertyDescriptorNotFound{}
}

/*ControllerServiceGetPropertyDescriptorNotFound handles this case with default header values.

The specified resource could not be found.
*/
type ControllerServiceGetPropertyDescriptorNotFound struct {
}

func (o *ControllerServiceGetPropertyDescriptorNotFound) Error() string {
	return fmt.Sprintf("[GET /controller-services/{id}/descriptors][%d] controllerServiceGetPropertyDescriptorNotFound ", 404)
}

func (o *ControllerServiceGetPropertyDescriptorNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewControllerServiceGetPropertyDescriptorConflict creates a ControllerServiceGetPropertyDescriptorConflict with default headers values
func NewControllerServiceGetPropertyDescriptorConflict() *ControllerServiceGetPropertyDescriptorConflict {
	return &ControllerServiceGetPropertyDescriptorConflict{}
}

/*ControllerServiceGetPropertyDescriptorConflict handles this case with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type ControllerServiceGetPropertyDescriptorConflict struct {
}

func (o *ControllerServiceGetPropertyDescriptorConflict) Error() string {
	return fmt.Sprintf("[GET /controller-services/{id}/descriptors][%d] controllerServiceGetPropertyDescriptorConflict ", 409)
}

func (o *ControllerServiceGetPropertyDescriptorConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
