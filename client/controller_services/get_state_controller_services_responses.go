// Code generated by go-swagger; DO NOT EDIT.

package controller_services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bjornm82/go-swagger-nifi/models"
)

// GetStateControllerServicesReader is a Reader for the GetStateControllerServices structure.
type GetStateControllerServicesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetStateControllerServicesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetStateControllerServicesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetStateControllerServicesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetStateControllerServicesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetStateControllerServicesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetStateControllerServicesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetStateControllerServicesConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetStateControllerServicesOK creates a GetStateControllerServicesOK with default headers values
func NewGetStateControllerServicesOK() *GetStateControllerServicesOK {
	return &GetStateControllerServicesOK{}
}

/*GetStateControllerServicesOK handles this case with default header values.

successful operation
*/
type GetStateControllerServicesOK struct {
	Payload *models.ComponentStateEntity
}

func (o *GetStateControllerServicesOK) Error() string {
	return fmt.Sprintf("[GET /controller-services/{id}/state][%d] getStateControllerServicesOK  %+v", 200, o.Payload)
}

func (o *GetStateControllerServicesOK) GetPayload() *models.ComponentStateEntity {
	return o.Payload
}

func (o *GetStateControllerServicesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ComponentStateEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStateControllerServicesBadRequest creates a GetStateControllerServicesBadRequest with default headers values
func NewGetStateControllerServicesBadRequest() *GetStateControllerServicesBadRequest {
	return &GetStateControllerServicesBadRequest{}
}

/*GetStateControllerServicesBadRequest handles this case with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type GetStateControllerServicesBadRequest struct {
}

func (o *GetStateControllerServicesBadRequest) Error() string {
	return fmt.Sprintf("[GET /controller-services/{id}/state][%d] getStateControllerServicesBadRequest ", 400)
}

func (o *GetStateControllerServicesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetStateControllerServicesUnauthorized creates a GetStateControllerServicesUnauthorized with default headers values
func NewGetStateControllerServicesUnauthorized() *GetStateControllerServicesUnauthorized {
	return &GetStateControllerServicesUnauthorized{}
}

/*GetStateControllerServicesUnauthorized handles this case with default header values.

Client could not be authenticated.
*/
type GetStateControllerServicesUnauthorized struct {
}

func (o *GetStateControllerServicesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /controller-services/{id}/state][%d] getStateControllerServicesUnauthorized ", 401)
}

func (o *GetStateControllerServicesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetStateControllerServicesForbidden creates a GetStateControllerServicesForbidden with default headers values
func NewGetStateControllerServicesForbidden() *GetStateControllerServicesForbidden {
	return &GetStateControllerServicesForbidden{}
}

/*GetStateControllerServicesForbidden handles this case with default header values.

Client is not authorized to make this request.
*/
type GetStateControllerServicesForbidden struct {
}

func (o *GetStateControllerServicesForbidden) Error() string {
	return fmt.Sprintf("[GET /controller-services/{id}/state][%d] getStateControllerServicesForbidden ", 403)
}

func (o *GetStateControllerServicesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetStateControllerServicesNotFound creates a GetStateControllerServicesNotFound with default headers values
func NewGetStateControllerServicesNotFound() *GetStateControllerServicesNotFound {
	return &GetStateControllerServicesNotFound{}
}

/*GetStateControllerServicesNotFound handles this case with default header values.

The specified resource could not be found.
*/
type GetStateControllerServicesNotFound struct {
}

func (o *GetStateControllerServicesNotFound) Error() string {
	return fmt.Sprintf("[GET /controller-services/{id}/state][%d] getStateControllerServicesNotFound ", 404)
}

func (o *GetStateControllerServicesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetStateControllerServicesConflict creates a GetStateControllerServicesConflict with default headers values
func NewGetStateControllerServicesConflict() *GetStateControllerServicesConflict {
	return &GetStateControllerServicesConflict{}
}

/*GetStateControllerServicesConflict handles this case with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type GetStateControllerServicesConflict struct {
}

func (o *GetStateControllerServicesConflict) Error() string {
	return fmt.Sprintf("[GET /controller-services/{id}/state][%d] getStateControllerServicesConflict ", 409)
}

func (o *GetStateControllerServicesConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
