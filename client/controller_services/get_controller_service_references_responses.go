// Code generated by go-swagger; DO NOT EDIT.

package controller_services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/bjornm82/go-swagger-nifi/models"
)

// GetControllerServiceReferencesReader is a Reader for the GetControllerServiceReferences structure.
type GetControllerServiceReferencesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetControllerServiceReferencesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetControllerServiceReferencesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetControllerServiceReferencesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetControllerServiceReferencesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetControllerServiceReferencesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetControllerServiceReferencesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewGetControllerServiceReferencesConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetControllerServiceReferencesOK creates a GetControllerServiceReferencesOK with default headers values
func NewGetControllerServiceReferencesOK() *GetControllerServiceReferencesOK {
	return &GetControllerServiceReferencesOK{}
}

/*GetControllerServiceReferencesOK handles this case with default header values.

successful operation
*/
type GetControllerServiceReferencesOK struct {
	Payload *models.ControllerServiceReferencingComponentsEntity
}

func (o *GetControllerServiceReferencesOK) Error() string {
	return fmt.Sprintf("[GET /controller-services/{id}/references][%d] getControllerServiceReferencesOK  %+v", 200, o.Payload)
}

func (o *GetControllerServiceReferencesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ControllerServiceReferencingComponentsEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetControllerServiceReferencesBadRequest creates a GetControllerServiceReferencesBadRequest with default headers values
func NewGetControllerServiceReferencesBadRequest() *GetControllerServiceReferencesBadRequest {
	return &GetControllerServiceReferencesBadRequest{}
}

/*GetControllerServiceReferencesBadRequest handles this case with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type GetControllerServiceReferencesBadRequest struct {
}

func (o *GetControllerServiceReferencesBadRequest) Error() string {
	return fmt.Sprintf("[GET /controller-services/{id}/references][%d] getControllerServiceReferencesBadRequest ", 400)
}

func (o *GetControllerServiceReferencesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetControllerServiceReferencesUnauthorized creates a GetControllerServiceReferencesUnauthorized with default headers values
func NewGetControllerServiceReferencesUnauthorized() *GetControllerServiceReferencesUnauthorized {
	return &GetControllerServiceReferencesUnauthorized{}
}

/*GetControllerServiceReferencesUnauthorized handles this case with default header values.

Client could not be authenticated.
*/
type GetControllerServiceReferencesUnauthorized struct {
}

func (o *GetControllerServiceReferencesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /controller-services/{id}/references][%d] getControllerServiceReferencesUnauthorized ", 401)
}

func (o *GetControllerServiceReferencesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetControllerServiceReferencesForbidden creates a GetControllerServiceReferencesForbidden with default headers values
func NewGetControllerServiceReferencesForbidden() *GetControllerServiceReferencesForbidden {
	return &GetControllerServiceReferencesForbidden{}
}

/*GetControllerServiceReferencesForbidden handles this case with default header values.

Client is not authorized to make this request.
*/
type GetControllerServiceReferencesForbidden struct {
}

func (o *GetControllerServiceReferencesForbidden) Error() string {
	return fmt.Sprintf("[GET /controller-services/{id}/references][%d] getControllerServiceReferencesForbidden ", 403)
}

func (o *GetControllerServiceReferencesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetControllerServiceReferencesNotFound creates a GetControllerServiceReferencesNotFound with default headers values
func NewGetControllerServiceReferencesNotFound() *GetControllerServiceReferencesNotFound {
	return &GetControllerServiceReferencesNotFound{}
}

/*GetControllerServiceReferencesNotFound handles this case with default header values.

The specified resource could not be found.
*/
type GetControllerServiceReferencesNotFound struct {
}

func (o *GetControllerServiceReferencesNotFound) Error() string {
	return fmt.Sprintf("[GET /controller-services/{id}/references][%d] getControllerServiceReferencesNotFound ", 404)
}

func (o *GetControllerServiceReferencesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetControllerServiceReferencesConflict creates a GetControllerServiceReferencesConflict with default headers values
func NewGetControllerServiceReferencesConflict() *GetControllerServiceReferencesConflict {
	return &GetControllerServiceReferencesConflict{}
}

/*GetControllerServiceReferencesConflict handles this case with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type GetControllerServiceReferencesConflict struct {
}

func (o *GetControllerServiceReferencesConflict) Error() string {
	return fmt.Sprintf("[GET /controller-services/{id}/references][%d] getControllerServiceReferencesConflict ", 409)
}

func (o *GetControllerServiceReferencesConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
