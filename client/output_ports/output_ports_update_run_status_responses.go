// Code generated by go-swagger; DO NOT EDIT.

package output_ports

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/bjornm82/go-swagger-nifi/models"
)

// OutputPortsUpdateRunStatusReader is a Reader for the OutputPortsUpdateRunStatus structure.
type OutputPortsUpdateRunStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *OutputPortsUpdateRunStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewOutputPortsUpdateRunStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewOutputPortsUpdateRunStatusBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewOutputPortsUpdateRunStatusUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewOutputPortsUpdateRunStatusForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewOutputPortsUpdateRunStatusNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewOutputPortsUpdateRunStatusConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewOutputPortsUpdateRunStatusOK creates a OutputPortsUpdateRunStatusOK with default headers values
func NewOutputPortsUpdateRunStatusOK() *OutputPortsUpdateRunStatusOK {
	return &OutputPortsUpdateRunStatusOK{}
}

/*OutputPortsUpdateRunStatusOK handles this case with default header values.

successful operation
*/
type OutputPortsUpdateRunStatusOK struct {
	Payload *models.ProcessorEntity
}

func (o *OutputPortsUpdateRunStatusOK) Error() string {
	return fmt.Sprintf("[PUT /output-ports/{id}/run-status][%d] outputPortsUpdateRunStatusOK  %+v", 200, o.Payload)
}

func (o *OutputPortsUpdateRunStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProcessorEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOutputPortsUpdateRunStatusBadRequest creates a OutputPortsUpdateRunStatusBadRequest with default headers values
func NewOutputPortsUpdateRunStatusBadRequest() *OutputPortsUpdateRunStatusBadRequest {
	return &OutputPortsUpdateRunStatusBadRequest{}
}

/*OutputPortsUpdateRunStatusBadRequest handles this case with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type OutputPortsUpdateRunStatusBadRequest struct {
}

func (o *OutputPortsUpdateRunStatusBadRequest) Error() string {
	return fmt.Sprintf("[PUT /output-ports/{id}/run-status][%d] outputPortsUpdateRunStatusBadRequest ", 400)
}

func (o *OutputPortsUpdateRunStatusBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewOutputPortsUpdateRunStatusUnauthorized creates a OutputPortsUpdateRunStatusUnauthorized with default headers values
func NewOutputPortsUpdateRunStatusUnauthorized() *OutputPortsUpdateRunStatusUnauthorized {
	return &OutputPortsUpdateRunStatusUnauthorized{}
}

/*OutputPortsUpdateRunStatusUnauthorized handles this case with default header values.

Client could not be authenticated.
*/
type OutputPortsUpdateRunStatusUnauthorized struct {
}

func (o *OutputPortsUpdateRunStatusUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /output-ports/{id}/run-status][%d] outputPortsUpdateRunStatusUnauthorized ", 401)
}

func (o *OutputPortsUpdateRunStatusUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewOutputPortsUpdateRunStatusForbidden creates a OutputPortsUpdateRunStatusForbidden with default headers values
func NewOutputPortsUpdateRunStatusForbidden() *OutputPortsUpdateRunStatusForbidden {
	return &OutputPortsUpdateRunStatusForbidden{}
}

/*OutputPortsUpdateRunStatusForbidden handles this case with default header values.

Client is not authorized to make this request.
*/
type OutputPortsUpdateRunStatusForbidden struct {
}

func (o *OutputPortsUpdateRunStatusForbidden) Error() string {
	return fmt.Sprintf("[PUT /output-ports/{id}/run-status][%d] outputPortsUpdateRunStatusForbidden ", 403)
}

func (o *OutputPortsUpdateRunStatusForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewOutputPortsUpdateRunStatusNotFound creates a OutputPortsUpdateRunStatusNotFound with default headers values
func NewOutputPortsUpdateRunStatusNotFound() *OutputPortsUpdateRunStatusNotFound {
	return &OutputPortsUpdateRunStatusNotFound{}
}

/*OutputPortsUpdateRunStatusNotFound handles this case with default header values.

The specified resource could not be found.
*/
type OutputPortsUpdateRunStatusNotFound struct {
}

func (o *OutputPortsUpdateRunStatusNotFound) Error() string {
	return fmt.Sprintf("[PUT /output-ports/{id}/run-status][%d] outputPortsUpdateRunStatusNotFound ", 404)
}

func (o *OutputPortsUpdateRunStatusNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewOutputPortsUpdateRunStatusConflict creates a OutputPortsUpdateRunStatusConflict with default headers values
func NewOutputPortsUpdateRunStatusConflict() *OutputPortsUpdateRunStatusConflict {
	return &OutputPortsUpdateRunStatusConflict{}
}

/*OutputPortsUpdateRunStatusConflict handles this case with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type OutputPortsUpdateRunStatusConflict struct {
}

func (o *OutputPortsUpdateRunStatusConflict) Error() string {
	return fmt.Sprintf("[PUT /output-ports/{id}/run-status][%d] outputPortsUpdateRunStatusConflict ", 409)
}

func (o *OutputPortsUpdateRunStatusConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
