// Code generated by go-swagger; DO NOT EDIT.

package flow

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/bjornm82/go-swagger-nifi/models"
)

// GetComponentHistoryReader is a Reader for the GetComponentHistory structure.
type GetComponentHistoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetComponentHistoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetComponentHistoryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetComponentHistoryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetComponentHistoryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetComponentHistoryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetComponentHistoryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewGetComponentHistoryConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetComponentHistoryOK creates a GetComponentHistoryOK with default headers values
func NewGetComponentHistoryOK() *GetComponentHistoryOK {
	return &GetComponentHistoryOK{}
}

/*GetComponentHistoryOK handles this case with default header values.

successful operation
*/
type GetComponentHistoryOK struct {
	Payload *models.ComponentHistoryEntity
}

func (o *GetComponentHistoryOK) Error() string {
	return fmt.Sprintf("[GET /flow/history/components/{componentId}][%d] getComponentHistoryOK  %+v", 200, o.Payload)
}

func (o *GetComponentHistoryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ComponentHistoryEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetComponentHistoryBadRequest creates a GetComponentHistoryBadRequest with default headers values
func NewGetComponentHistoryBadRequest() *GetComponentHistoryBadRequest {
	return &GetComponentHistoryBadRequest{}
}

/*GetComponentHistoryBadRequest handles this case with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type GetComponentHistoryBadRequest struct {
}

func (o *GetComponentHistoryBadRequest) Error() string {
	return fmt.Sprintf("[GET /flow/history/components/{componentId}][%d] getComponentHistoryBadRequest ", 400)
}

func (o *GetComponentHistoryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetComponentHistoryUnauthorized creates a GetComponentHistoryUnauthorized with default headers values
func NewGetComponentHistoryUnauthorized() *GetComponentHistoryUnauthorized {
	return &GetComponentHistoryUnauthorized{}
}

/*GetComponentHistoryUnauthorized handles this case with default header values.

Client could not be authenticated.
*/
type GetComponentHistoryUnauthorized struct {
}

func (o *GetComponentHistoryUnauthorized) Error() string {
	return fmt.Sprintf("[GET /flow/history/components/{componentId}][%d] getComponentHistoryUnauthorized ", 401)
}

func (o *GetComponentHistoryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetComponentHistoryForbidden creates a GetComponentHistoryForbidden with default headers values
func NewGetComponentHistoryForbidden() *GetComponentHistoryForbidden {
	return &GetComponentHistoryForbidden{}
}

/*GetComponentHistoryForbidden handles this case with default header values.

Client is not authorized to make this request.
*/
type GetComponentHistoryForbidden struct {
}

func (o *GetComponentHistoryForbidden) Error() string {
	return fmt.Sprintf("[GET /flow/history/components/{componentId}][%d] getComponentHistoryForbidden ", 403)
}

func (o *GetComponentHistoryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetComponentHistoryNotFound creates a GetComponentHistoryNotFound with default headers values
func NewGetComponentHistoryNotFound() *GetComponentHistoryNotFound {
	return &GetComponentHistoryNotFound{}
}

/*GetComponentHistoryNotFound handles this case with default header values.

The specified resource could not be found.
*/
type GetComponentHistoryNotFound struct {
}

func (o *GetComponentHistoryNotFound) Error() string {
	return fmt.Sprintf("[GET /flow/history/components/{componentId}][%d] getComponentHistoryNotFound ", 404)
}

func (o *GetComponentHistoryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetComponentHistoryConflict creates a GetComponentHistoryConflict with default headers values
func NewGetComponentHistoryConflict() *GetComponentHistoryConflict {
	return &GetComponentHistoryConflict{}
}

/*GetComponentHistoryConflict handles this case with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type GetComponentHistoryConflict struct {
}

func (o *GetComponentHistoryConflict) Error() string {
	return fmt.Sprintf("[GET /flow/history/components/{componentId}][%d] getComponentHistoryConflict ", 409)
}

func (o *GetComponentHistoryConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
