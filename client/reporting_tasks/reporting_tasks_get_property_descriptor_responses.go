// Code generated by go-swagger; DO NOT EDIT.

package reporting_tasks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/bjornm82/swagger-nifi/models"
)

// ReportingTasksGetPropertyDescriptorReader is a Reader for the ReportingTasksGetPropertyDescriptor structure.
type ReportingTasksGetPropertyDescriptorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReportingTasksGetPropertyDescriptorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewReportingTasksGetPropertyDescriptorOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewReportingTasksGetPropertyDescriptorBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewReportingTasksGetPropertyDescriptorUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewReportingTasksGetPropertyDescriptorForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewReportingTasksGetPropertyDescriptorNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewReportingTasksGetPropertyDescriptorConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewReportingTasksGetPropertyDescriptorOK creates a ReportingTasksGetPropertyDescriptorOK with default headers values
func NewReportingTasksGetPropertyDescriptorOK() *ReportingTasksGetPropertyDescriptorOK {
	return &ReportingTasksGetPropertyDescriptorOK{}
}

/*ReportingTasksGetPropertyDescriptorOK handles this case with default header values.

successful operation
*/
type ReportingTasksGetPropertyDescriptorOK struct {
	Payload *models.PropertyDescriptorEntity
}

func (o *ReportingTasksGetPropertyDescriptorOK) Error() string {
	return fmt.Sprintf("[GET /reporting-tasks/{id}/descriptors][%d] reportingTasksGetPropertyDescriptorOK  %+v", 200, o.Payload)
}

func (o *ReportingTasksGetPropertyDescriptorOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PropertyDescriptorEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReportingTasksGetPropertyDescriptorBadRequest creates a ReportingTasksGetPropertyDescriptorBadRequest with default headers values
func NewReportingTasksGetPropertyDescriptorBadRequest() *ReportingTasksGetPropertyDescriptorBadRequest {
	return &ReportingTasksGetPropertyDescriptorBadRequest{}
}

/*ReportingTasksGetPropertyDescriptorBadRequest handles this case with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type ReportingTasksGetPropertyDescriptorBadRequest struct {
}

func (o *ReportingTasksGetPropertyDescriptorBadRequest) Error() string {
	return fmt.Sprintf("[GET /reporting-tasks/{id}/descriptors][%d] reportingTasksGetPropertyDescriptorBadRequest ", 400)
}

func (o *ReportingTasksGetPropertyDescriptorBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReportingTasksGetPropertyDescriptorUnauthorized creates a ReportingTasksGetPropertyDescriptorUnauthorized with default headers values
func NewReportingTasksGetPropertyDescriptorUnauthorized() *ReportingTasksGetPropertyDescriptorUnauthorized {
	return &ReportingTasksGetPropertyDescriptorUnauthorized{}
}

/*ReportingTasksGetPropertyDescriptorUnauthorized handles this case with default header values.

Client could not be authenticated.
*/
type ReportingTasksGetPropertyDescriptorUnauthorized struct {
}

func (o *ReportingTasksGetPropertyDescriptorUnauthorized) Error() string {
	return fmt.Sprintf("[GET /reporting-tasks/{id}/descriptors][%d] reportingTasksGetPropertyDescriptorUnauthorized ", 401)
}

func (o *ReportingTasksGetPropertyDescriptorUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReportingTasksGetPropertyDescriptorForbidden creates a ReportingTasksGetPropertyDescriptorForbidden with default headers values
func NewReportingTasksGetPropertyDescriptorForbidden() *ReportingTasksGetPropertyDescriptorForbidden {
	return &ReportingTasksGetPropertyDescriptorForbidden{}
}

/*ReportingTasksGetPropertyDescriptorForbidden handles this case with default header values.

Client is not authorized to make this request.
*/
type ReportingTasksGetPropertyDescriptorForbidden struct {
}

func (o *ReportingTasksGetPropertyDescriptorForbidden) Error() string {
	return fmt.Sprintf("[GET /reporting-tasks/{id}/descriptors][%d] reportingTasksGetPropertyDescriptorForbidden ", 403)
}

func (o *ReportingTasksGetPropertyDescriptorForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReportingTasksGetPropertyDescriptorNotFound creates a ReportingTasksGetPropertyDescriptorNotFound with default headers values
func NewReportingTasksGetPropertyDescriptorNotFound() *ReportingTasksGetPropertyDescriptorNotFound {
	return &ReportingTasksGetPropertyDescriptorNotFound{}
}

/*ReportingTasksGetPropertyDescriptorNotFound handles this case with default header values.

The specified resource could not be found.
*/
type ReportingTasksGetPropertyDescriptorNotFound struct {
}

func (o *ReportingTasksGetPropertyDescriptorNotFound) Error() string {
	return fmt.Sprintf("[GET /reporting-tasks/{id}/descriptors][%d] reportingTasksGetPropertyDescriptorNotFound ", 404)
}

func (o *ReportingTasksGetPropertyDescriptorNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReportingTasksGetPropertyDescriptorConflict creates a ReportingTasksGetPropertyDescriptorConflict with default headers values
func NewReportingTasksGetPropertyDescriptorConflict() *ReportingTasksGetPropertyDescriptorConflict {
	return &ReportingTasksGetPropertyDescriptorConflict{}
}

/*ReportingTasksGetPropertyDescriptorConflict handles this case with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type ReportingTasksGetPropertyDescriptorConflict struct {
}

func (o *ReportingTasksGetPropertyDescriptorConflict) Error() string {
	return fmt.Sprintf("[GET /reporting-tasks/{id}/descriptors][%d] reportingTasksGetPropertyDescriptorConflict ", 409)
}

func (o *ReportingTasksGetPropertyDescriptorConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
