// Code generated by go-swagger; DO NOT EDIT.

package reporting_tasks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bjornm82/go-swagger-nifi/models"
)

// UpdateRunStatusReportingTasksReader is a Reader for the UpdateRunStatusReportingTasks structure.
type UpdateRunStatusReportingTasksReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateRunStatusReportingTasksReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateRunStatusReportingTasksOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateRunStatusReportingTasksBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateRunStatusReportingTasksUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateRunStatusReportingTasksForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateRunStatusReportingTasksNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewUpdateRunStatusReportingTasksConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateRunStatusReportingTasksOK creates a UpdateRunStatusReportingTasksOK with default headers values
func NewUpdateRunStatusReportingTasksOK() *UpdateRunStatusReportingTasksOK {
	return &UpdateRunStatusReportingTasksOK{}
}

/*UpdateRunStatusReportingTasksOK handles this case with default header values.

successful operation
*/
type UpdateRunStatusReportingTasksOK struct {
	Payload *models.ReportingTaskEntity
}

func (o *UpdateRunStatusReportingTasksOK) Error() string {
	return fmt.Sprintf("[PUT /reporting-tasks/{id}/run-status][%d] updateRunStatusReportingTasksOK  %+v", 200, o.Payload)
}

func (o *UpdateRunStatusReportingTasksOK) GetPayload() *models.ReportingTaskEntity {
	return o.Payload
}

func (o *UpdateRunStatusReportingTasksOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ReportingTaskEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateRunStatusReportingTasksBadRequest creates a UpdateRunStatusReportingTasksBadRequest with default headers values
func NewUpdateRunStatusReportingTasksBadRequest() *UpdateRunStatusReportingTasksBadRequest {
	return &UpdateRunStatusReportingTasksBadRequest{}
}

/*UpdateRunStatusReportingTasksBadRequest handles this case with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type UpdateRunStatusReportingTasksBadRequest struct {
}

func (o *UpdateRunStatusReportingTasksBadRequest) Error() string {
	return fmt.Sprintf("[PUT /reporting-tasks/{id}/run-status][%d] updateRunStatusReportingTasksBadRequest ", 400)
}

func (o *UpdateRunStatusReportingTasksBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRunStatusReportingTasksUnauthorized creates a UpdateRunStatusReportingTasksUnauthorized with default headers values
func NewUpdateRunStatusReportingTasksUnauthorized() *UpdateRunStatusReportingTasksUnauthorized {
	return &UpdateRunStatusReportingTasksUnauthorized{}
}

/*UpdateRunStatusReportingTasksUnauthorized handles this case with default header values.

Client could not be authenticated.
*/
type UpdateRunStatusReportingTasksUnauthorized struct {
}

func (o *UpdateRunStatusReportingTasksUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /reporting-tasks/{id}/run-status][%d] updateRunStatusReportingTasksUnauthorized ", 401)
}

func (o *UpdateRunStatusReportingTasksUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRunStatusReportingTasksForbidden creates a UpdateRunStatusReportingTasksForbidden with default headers values
func NewUpdateRunStatusReportingTasksForbidden() *UpdateRunStatusReportingTasksForbidden {
	return &UpdateRunStatusReportingTasksForbidden{}
}

/*UpdateRunStatusReportingTasksForbidden handles this case with default header values.

Client is not authorized to make this request.
*/
type UpdateRunStatusReportingTasksForbidden struct {
}

func (o *UpdateRunStatusReportingTasksForbidden) Error() string {
	return fmt.Sprintf("[PUT /reporting-tasks/{id}/run-status][%d] updateRunStatusReportingTasksForbidden ", 403)
}

func (o *UpdateRunStatusReportingTasksForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRunStatusReportingTasksNotFound creates a UpdateRunStatusReportingTasksNotFound with default headers values
func NewUpdateRunStatusReportingTasksNotFound() *UpdateRunStatusReportingTasksNotFound {
	return &UpdateRunStatusReportingTasksNotFound{}
}

/*UpdateRunStatusReportingTasksNotFound handles this case with default header values.

The specified resource could not be found.
*/
type UpdateRunStatusReportingTasksNotFound struct {
}

func (o *UpdateRunStatusReportingTasksNotFound) Error() string {
	return fmt.Sprintf("[PUT /reporting-tasks/{id}/run-status][%d] updateRunStatusReportingTasksNotFound ", 404)
}

func (o *UpdateRunStatusReportingTasksNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRunStatusReportingTasksConflict creates a UpdateRunStatusReportingTasksConflict with default headers values
func NewUpdateRunStatusReportingTasksConflict() *UpdateRunStatusReportingTasksConflict {
	return &UpdateRunStatusReportingTasksConflict{}
}

/*UpdateRunStatusReportingTasksConflict handles this case with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type UpdateRunStatusReportingTasksConflict struct {
}

func (o *UpdateRunStatusReportingTasksConflict) Error() string {
	return fmt.Sprintf("[PUT /reporting-tasks/{id}/run-status][%d] updateRunStatusReportingTasksConflict ", 409)
}

func (o *UpdateRunStatusReportingTasksConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
