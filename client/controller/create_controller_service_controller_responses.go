// Code generated by go-swagger; DO NOT EDIT.

package controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bjornm82/go-swagger-nifi/models"
)

// CreateControllerServiceControllerReader is a Reader for the CreateControllerServiceController structure.
type CreateControllerServiceControllerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateControllerServiceControllerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateControllerServiceControllerCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateControllerServiceControllerBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateControllerServiceControllerUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateControllerServiceControllerForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateControllerServiceControllerConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateControllerServiceControllerCreated creates a CreateControllerServiceControllerCreated with default headers values
func NewCreateControllerServiceControllerCreated() *CreateControllerServiceControllerCreated {
	return &CreateControllerServiceControllerCreated{}
}

/*CreateControllerServiceControllerCreated handles this case with default header values.

successful operation
*/
type CreateControllerServiceControllerCreated struct {
	Payload *models.ControllerServiceEntity
}

func (o *CreateControllerServiceControllerCreated) Error() string {
	return fmt.Sprintf("[POST /controller/controller-services][%d] createControllerServiceControllerCreated  %+v", 201, o.Payload)
}

func (o *CreateControllerServiceControllerCreated) GetPayload() *models.ControllerServiceEntity {
	return o.Payload
}

func (o *CreateControllerServiceControllerCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ControllerServiceEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateControllerServiceControllerBadRequest creates a CreateControllerServiceControllerBadRequest with default headers values
func NewCreateControllerServiceControllerBadRequest() *CreateControllerServiceControllerBadRequest {
	return &CreateControllerServiceControllerBadRequest{}
}

/*CreateControllerServiceControllerBadRequest handles this case with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type CreateControllerServiceControllerBadRequest struct {
}

func (o *CreateControllerServiceControllerBadRequest) Error() string {
	return fmt.Sprintf("[POST /controller/controller-services][%d] createControllerServiceControllerBadRequest ", 400)
}

func (o *CreateControllerServiceControllerBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateControllerServiceControllerUnauthorized creates a CreateControllerServiceControllerUnauthorized with default headers values
func NewCreateControllerServiceControllerUnauthorized() *CreateControllerServiceControllerUnauthorized {
	return &CreateControllerServiceControllerUnauthorized{}
}

/*CreateControllerServiceControllerUnauthorized handles this case with default header values.

Client could not be authenticated.
*/
type CreateControllerServiceControllerUnauthorized struct {
}

func (o *CreateControllerServiceControllerUnauthorized) Error() string {
	return fmt.Sprintf("[POST /controller/controller-services][%d] createControllerServiceControllerUnauthorized ", 401)
}

func (o *CreateControllerServiceControllerUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateControllerServiceControllerForbidden creates a CreateControllerServiceControllerForbidden with default headers values
func NewCreateControllerServiceControllerForbidden() *CreateControllerServiceControllerForbidden {
	return &CreateControllerServiceControllerForbidden{}
}

/*CreateControllerServiceControllerForbidden handles this case with default header values.

Client is not authorized to make this request.
*/
type CreateControllerServiceControllerForbidden struct {
}

func (o *CreateControllerServiceControllerForbidden) Error() string {
	return fmt.Sprintf("[POST /controller/controller-services][%d] createControllerServiceControllerForbidden ", 403)
}

func (o *CreateControllerServiceControllerForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateControllerServiceControllerConflict creates a CreateControllerServiceControllerConflict with default headers values
func NewCreateControllerServiceControllerConflict() *CreateControllerServiceControllerConflict {
	return &CreateControllerServiceControllerConflict{}
}

/*CreateControllerServiceControllerConflict handles this case with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type CreateControllerServiceControllerConflict struct {
}

func (o *CreateControllerServiceControllerConflict) Error() string {
	return fmt.Sprintf("[POST /controller/controller-services][%d] createControllerServiceControllerConflict ", 409)
}

func (o *CreateControllerServiceControllerConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
