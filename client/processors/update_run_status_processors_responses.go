// Code generated by go-swagger; DO NOT EDIT.

package processors

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bjornm82/go-swagger-nifi/models"
)

// UpdateRunStatusProcessorsReader is a Reader for the UpdateRunStatusProcessors structure.
type UpdateRunStatusProcessorsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateRunStatusProcessorsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateRunStatusProcessorsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateRunStatusProcessorsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateRunStatusProcessorsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateRunStatusProcessorsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateRunStatusProcessorsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewUpdateRunStatusProcessorsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateRunStatusProcessorsOK creates a UpdateRunStatusProcessorsOK with default headers values
func NewUpdateRunStatusProcessorsOK() *UpdateRunStatusProcessorsOK {
	return &UpdateRunStatusProcessorsOK{}
}

/*UpdateRunStatusProcessorsOK handles this case with default header values.

successful operation
*/
type UpdateRunStatusProcessorsOK struct {
	Payload *models.ProcessorEntity
}

func (o *UpdateRunStatusProcessorsOK) Error() string {
	return fmt.Sprintf("[PUT /processors/{id}/run-status][%d] updateRunStatusProcessorsOK  %+v", 200, o.Payload)
}

func (o *UpdateRunStatusProcessorsOK) GetPayload() *models.ProcessorEntity {
	return o.Payload
}

func (o *UpdateRunStatusProcessorsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProcessorEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateRunStatusProcessorsBadRequest creates a UpdateRunStatusProcessorsBadRequest with default headers values
func NewUpdateRunStatusProcessorsBadRequest() *UpdateRunStatusProcessorsBadRequest {
	return &UpdateRunStatusProcessorsBadRequest{}
}

/*UpdateRunStatusProcessorsBadRequest handles this case with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type UpdateRunStatusProcessorsBadRequest struct {
}

func (o *UpdateRunStatusProcessorsBadRequest) Error() string {
	return fmt.Sprintf("[PUT /processors/{id}/run-status][%d] updateRunStatusProcessorsBadRequest ", 400)
}

func (o *UpdateRunStatusProcessorsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRunStatusProcessorsUnauthorized creates a UpdateRunStatusProcessorsUnauthorized with default headers values
func NewUpdateRunStatusProcessorsUnauthorized() *UpdateRunStatusProcessorsUnauthorized {
	return &UpdateRunStatusProcessorsUnauthorized{}
}

/*UpdateRunStatusProcessorsUnauthorized handles this case with default header values.

Client could not be authenticated.
*/
type UpdateRunStatusProcessorsUnauthorized struct {
}

func (o *UpdateRunStatusProcessorsUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /processors/{id}/run-status][%d] updateRunStatusProcessorsUnauthorized ", 401)
}

func (o *UpdateRunStatusProcessorsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRunStatusProcessorsForbidden creates a UpdateRunStatusProcessorsForbidden with default headers values
func NewUpdateRunStatusProcessorsForbidden() *UpdateRunStatusProcessorsForbidden {
	return &UpdateRunStatusProcessorsForbidden{}
}

/*UpdateRunStatusProcessorsForbidden handles this case with default header values.

Client is not authorized to make this request.
*/
type UpdateRunStatusProcessorsForbidden struct {
}

func (o *UpdateRunStatusProcessorsForbidden) Error() string {
	return fmt.Sprintf("[PUT /processors/{id}/run-status][%d] updateRunStatusProcessorsForbidden ", 403)
}

func (o *UpdateRunStatusProcessorsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRunStatusProcessorsNotFound creates a UpdateRunStatusProcessorsNotFound with default headers values
func NewUpdateRunStatusProcessorsNotFound() *UpdateRunStatusProcessorsNotFound {
	return &UpdateRunStatusProcessorsNotFound{}
}

/*UpdateRunStatusProcessorsNotFound handles this case with default header values.

The specified resource could not be found.
*/
type UpdateRunStatusProcessorsNotFound struct {
}

func (o *UpdateRunStatusProcessorsNotFound) Error() string {
	return fmt.Sprintf("[PUT /processors/{id}/run-status][%d] updateRunStatusProcessorsNotFound ", 404)
}

func (o *UpdateRunStatusProcessorsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRunStatusProcessorsConflict creates a UpdateRunStatusProcessorsConflict with default headers values
func NewUpdateRunStatusProcessorsConflict() *UpdateRunStatusProcessorsConflict {
	return &UpdateRunStatusProcessorsConflict{}
}

/*UpdateRunStatusProcessorsConflict handles this case with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type UpdateRunStatusProcessorsConflict struct {
}

func (o *UpdateRunStatusProcessorsConflict) Error() string {
	return fmt.Sprintf("[PUT /processors/{id}/run-status][%d] updateRunStatusProcessorsConflict ", 409)
}

func (o *UpdateRunStatusProcessorsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
