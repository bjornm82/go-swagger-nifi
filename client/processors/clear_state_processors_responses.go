// Code generated by go-swagger; DO NOT EDIT.

package processors

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bjornm82/go-swagger-nifi/models"
)

// ClearStateProcessorsReader is a Reader for the ClearStateProcessors structure.
type ClearStateProcessorsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ClearStateProcessorsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewClearStateProcessorsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewClearStateProcessorsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewClearStateProcessorsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewClearStateProcessorsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewClearStateProcessorsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewClearStateProcessorsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewClearStateProcessorsCreated creates a ClearStateProcessorsCreated with default headers values
func NewClearStateProcessorsCreated() *ClearStateProcessorsCreated {
	return &ClearStateProcessorsCreated{}
}

/*ClearStateProcessorsCreated handles this case with default header values.

successful operation
*/
type ClearStateProcessorsCreated struct {
	Payload *models.ComponentStateEntity
}

func (o *ClearStateProcessorsCreated) Error() string {
	return fmt.Sprintf("[POST /processors/{id}/state/clear-requests][%d] clearStateProcessorsCreated  %+v", 201, o.Payload)
}

func (o *ClearStateProcessorsCreated) GetPayload() *models.ComponentStateEntity {
	return o.Payload
}

func (o *ClearStateProcessorsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ComponentStateEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewClearStateProcessorsBadRequest creates a ClearStateProcessorsBadRequest with default headers values
func NewClearStateProcessorsBadRequest() *ClearStateProcessorsBadRequest {
	return &ClearStateProcessorsBadRequest{}
}

/*ClearStateProcessorsBadRequest handles this case with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type ClearStateProcessorsBadRequest struct {
}

func (o *ClearStateProcessorsBadRequest) Error() string {
	return fmt.Sprintf("[POST /processors/{id}/state/clear-requests][%d] clearStateProcessorsBadRequest ", 400)
}

func (o *ClearStateProcessorsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewClearStateProcessorsUnauthorized creates a ClearStateProcessorsUnauthorized with default headers values
func NewClearStateProcessorsUnauthorized() *ClearStateProcessorsUnauthorized {
	return &ClearStateProcessorsUnauthorized{}
}

/*ClearStateProcessorsUnauthorized handles this case with default header values.

Client could not be authenticated.
*/
type ClearStateProcessorsUnauthorized struct {
}

func (o *ClearStateProcessorsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /processors/{id}/state/clear-requests][%d] clearStateProcessorsUnauthorized ", 401)
}

func (o *ClearStateProcessorsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewClearStateProcessorsForbidden creates a ClearStateProcessorsForbidden with default headers values
func NewClearStateProcessorsForbidden() *ClearStateProcessorsForbidden {
	return &ClearStateProcessorsForbidden{}
}

/*ClearStateProcessorsForbidden handles this case with default header values.

Client is not authorized to make this request.
*/
type ClearStateProcessorsForbidden struct {
}

func (o *ClearStateProcessorsForbidden) Error() string {
	return fmt.Sprintf("[POST /processors/{id}/state/clear-requests][%d] clearStateProcessorsForbidden ", 403)
}

func (o *ClearStateProcessorsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewClearStateProcessorsNotFound creates a ClearStateProcessorsNotFound with default headers values
func NewClearStateProcessorsNotFound() *ClearStateProcessorsNotFound {
	return &ClearStateProcessorsNotFound{}
}

/*ClearStateProcessorsNotFound handles this case with default header values.

The specified resource could not be found.
*/
type ClearStateProcessorsNotFound struct {
}

func (o *ClearStateProcessorsNotFound) Error() string {
	return fmt.Sprintf("[POST /processors/{id}/state/clear-requests][%d] clearStateProcessorsNotFound ", 404)
}

func (o *ClearStateProcessorsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewClearStateProcessorsConflict creates a ClearStateProcessorsConflict with default headers values
func NewClearStateProcessorsConflict() *ClearStateProcessorsConflict {
	return &ClearStateProcessorsConflict{}
}

/*ClearStateProcessorsConflict handles this case with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type ClearStateProcessorsConflict struct {
}

func (o *ClearStateProcessorsConflict) Error() string {
	return fmt.Sprintf("[POST /processors/{id}/state/clear-requests][%d] clearStateProcessorsConflict ", 409)
}

func (o *ClearStateProcessorsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
