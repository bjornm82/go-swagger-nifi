// Code generated by go-swagger; DO NOT EDIT.

package processors

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/bjornm82/swagger-nifi/models"
)

// ProcessorsUpdateRunStatusReader is a Reader for the ProcessorsUpdateRunStatus structure.
type ProcessorsUpdateRunStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProcessorsUpdateRunStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewProcessorsUpdateRunStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewProcessorsUpdateRunStatusBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewProcessorsUpdateRunStatusUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewProcessorsUpdateRunStatusForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewProcessorsUpdateRunStatusNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewProcessorsUpdateRunStatusConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewProcessorsUpdateRunStatusOK creates a ProcessorsUpdateRunStatusOK with default headers values
func NewProcessorsUpdateRunStatusOK() *ProcessorsUpdateRunStatusOK {
	return &ProcessorsUpdateRunStatusOK{}
}

/*ProcessorsUpdateRunStatusOK handles this case with default header values.

successful operation
*/
type ProcessorsUpdateRunStatusOK struct {
	Payload *models.ProcessorEntity
}

func (o *ProcessorsUpdateRunStatusOK) Error() string {
	return fmt.Sprintf("[PUT /processors/{id}/run-status][%d] processorsUpdateRunStatusOK  %+v", 200, o.Payload)
}

func (o *ProcessorsUpdateRunStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProcessorEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProcessorsUpdateRunStatusBadRequest creates a ProcessorsUpdateRunStatusBadRequest with default headers values
func NewProcessorsUpdateRunStatusBadRequest() *ProcessorsUpdateRunStatusBadRequest {
	return &ProcessorsUpdateRunStatusBadRequest{}
}

/*ProcessorsUpdateRunStatusBadRequest handles this case with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type ProcessorsUpdateRunStatusBadRequest struct {
}

func (o *ProcessorsUpdateRunStatusBadRequest) Error() string {
	return fmt.Sprintf("[PUT /processors/{id}/run-status][%d] processorsUpdateRunStatusBadRequest ", 400)
}

func (o *ProcessorsUpdateRunStatusBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewProcessorsUpdateRunStatusUnauthorized creates a ProcessorsUpdateRunStatusUnauthorized with default headers values
func NewProcessorsUpdateRunStatusUnauthorized() *ProcessorsUpdateRunStatusUnauthorized {
	return &ProcessorsUpdateRunStatusUnauthorized{}
}

/*ProcessorsUpdateRunStatusUnauthorized handles this case with default header values.

Client could not be authenticated.
*/
type ProcessorsUpdateRunStatusUnauthorized struct {
}

func (o *ProcessorsUpdateRunStatusUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /processors/{id}/run-status][%d] processorsUpdateRunStatusUnauthorized ", 401)
}

func (o *ProcessorsUpdateRunStatusUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewProcessorsUpdateRunStatusForbidden creates a ProcessorsUpdateRunStatusForbidden with default headers values
func NewProcessorsUpdateRunStatusForbidden() *ProcessorsUpdateRunStatusForbidden {
	return &ProcessorsUpdateRunStatusForbidden{}
}

/*ProcessorsUpdateRunStatusForbidden handles this case with default header values.

Client is not authorized to make this request.
*/
type ProcessorsUpdateRunStatusForbidden struct {
}

func (o *ProcessorsUpdateRunStatusForbidden) Error() string {
	return fmt.Sprintf("[PUT /processors/{id}/run-status][%d] processorsUpdateRunStatusForbidden ", 403)
}

func (o *ProcessorsUpdateRunStatusForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewProcessorsUpdateRunStatusNotFound creates a ProcessorsUpdateRunStatusNotFound with default headers values
func NewProcessorsUpdateRunStatusNotFound() *ProcessorsUpdateRunStatusNotFound {
	return &ProcessorsUpdateRunStatusNotFound{}
}

/*ProcessorsUpdateRunStatusNotFound handles this case with default header values.

The specified resource could not be found.
*/
type ProcessorsUpdateRunStatusNotFound struct {
}

func (o *ProcessorsUpdateRunStatusNotFound) Error() string {
	return fmt.Sprintf("[PUT /processors/{id}/run-status][%d] processorsUpdateRunStatusNotFound ", 404)
}

func (o *ProcessorsUpdateRunStatusNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewProcessorsUpdateRunStatusConflict creates a ProcessorsUpdateRunStatusConflict with default headers values
func NewProcessorsUpdateRunStatusConflict() *ProcessorsUpdateRunStatusConflict {
	return &ProcessorsUpdateRunStatusConflict{}
}

/*ProcessorsUpdateRunStatusConflict handles this case with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type ProcessorsUpdateRunStatusConflict struct {
}

func (o *ProcessorsUpdateRunStatusConflict) Error() string {
	return fmt.Sprintf("[PUT /processors/{id}/run-status][%d] processorsUpdateRunStatusConflict ", 409)
}

func (o *ProcessorsUpdateRunStatusConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
