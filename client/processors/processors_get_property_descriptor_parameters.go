// Code generated by go-swagger; DO NOT EDIT.

package processors

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewProcessorsGetPropertyDescriptorParams creates a new ProcessorsGetPropertyDescriptorParams object
// with the default values initialized.
func NewProcessorsGetPropertyDescriptorParams() *ProcessorsGetPropertyDescriptorParams {
	var ()
	return &ProcessorsGetPropertyDescriptorParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewProcessorsGetPropertyDescriptorParamsWithTimeout creates a new ProcessorsGetPropertyDescriptorParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewProcessorsGetPropertyDescriptorParamsWithTimeout(timeout time.Duration) *ProcessorsGetPropertyDescriptorParams {
	var ()
	return &ProcessorsGetPropertyDescriptorParams{

		timeout: timeout,
	}
}

// NewProcessorsGetPropertyDescriptorParamsWithContext creates a new ProcessorsGetPropertyDescriptorParams object
// with the default values initialized, and the ability to set a context for a request
func NewProcessorsGetPropertyDescriptorParamsWithContext(ctx context.Context) *ProcessorsGetPropertyDescriptorParams {
	var ()
	return &ProcessorsGetPropertyDescriptorParams{

		Context: ctx,
	}
}

// NewProcessorsGetPropertyDescriptorParamsWithHTTPClient creates a new ProcessorsGetPropertyDescriptorParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewProcessorsGetPropertyDescriptorParamsWithHTTPClient(client *http.Client) *ProcessorsGetPropertyDescriptorParams {
	var ()
	return &ProcessorsGetPropertyDescriptorParams{
		HTTPClient: client,
	}
}

/*ProcessorsGetPropertyDescriptorParams contains all the parameters to send to the API endpoint
for the processors get property descriptor operation typically these are written to a http.Request
*/
type ProcessorsGetPropertyDescriptorParams struct {

	/*ClientID
	  If the client id is not specified, new one will be generated. This value (whether specified or generated) is included in the response.

	*/
	ClientID *string
	/*ID
	  The processor id.

	*/
	ID string
	/*PropertyName
	  The property name.

	*/
	PropertyName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the processors get property descriptor params
func (o *ProcessorsGetPropertyDescriptorParams) WithTimeout(timeout time.Duration) *ProcessorsGetPropertyDescriptorParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the processors get property descriptor params
func (o *ProcessorsGetPropertyDescriptorParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the processors get property descriptor params
func (o *ProcessorsGetPropertyDescriptorParams) WithContext(ctx context.Context) *ProcessorsGetPropertyDescriptorParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the processors get property descriptor params
func (o *ProcessorsGetPropertyDescriptorParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the processors get property descriptor params
func (o *ProcessorsGetPropertyDescriptorParams) WithHTTPClient(client *http.Client) *ProcessorsGetPropertyDescriptorParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the processors get property descriptor params
func (o *ProcessorsGetPropertyDescriptorParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithClientID adds the clientID to the processors get property descriptor params
func (o *ProcessorsGetPropertyDescriptorParams) WithClientID(clientID *string) *ProcessorsGetPropertyDescriptorParams {
	o.SetClientID(clientID)
	return o
}

// SetClientID adds the clientId to the processors get property descriptor params
func (o *ProcessorsGetPropertyDescriptorParams) SetClientID(clientID *string) {
	o.ClientID = clientID
}

// WithID adds the id to the processors get property descriptor params
func (o *ProcessorsGetPropertyDescriptorParams) WithID(id string) *ProcessorsGetPropertyDescriptorParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the processors get property descriptor params
func (o *ProcessorsGetPropertyDescriptorParams) SetID(id string) {
	o.ID = id
}

// WithPropertyName adds the propertyName to the processors get property descriptor params
func (o *ProcessorsGetPropertyDescriptorParams) WithPropertyName(propertyName string) *ProcessorsGetPropertyDescriptorParams {
	o.SetPropertyName(propertyName)
	return o
}

// SetPropertyName adds the propertyName to the processors get property descriptor params
func (o *ProcessorsGetPropertyDescriptorParams) SetPropertyName(propertyName string) {
	o.PropertyName = propertyName
}

// WriteToRequest writes these params to a swagger request
func (o *ProcessorsGetPropertyDescriptorParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ClientID != nil {

		// query param clientId
		var qrClientID string
		if o.ClientID != nil {
			qrClientID = *o.ClientID
		}
		qClientID := qrClientID
		if qClientID != "" {
			if err := r.SetQueryParam("clientId", qClientID); err != nil {
				return err
			}
		}

	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	// query param propertyName
	qrPropertyName := o.PropertyName
	qPropertyName := qrPropertyName
	if qPropertyName != "" {
		if err := r.SetQueryParam("propertyName", qPropertyName); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
