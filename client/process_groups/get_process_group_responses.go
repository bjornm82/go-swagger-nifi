// Code generated by go-swagger; DO NOT EDIT.

package process_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/bjornm82/swagger-nifi/models"
)

// GetProcessGroupReader is a Reader for the GetProcessGroup structure.
type GetProcessGroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetProcessGroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetProcessGroupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetProcessGroupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetProcessGroupUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetProcessGroupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetProcessGroupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewGetProcessGroupConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetProcessGroupOK creates a GetProcessGroupOK with default headers values
func NewGetProcessGroupOK() *GetProcessGroupOK {
	return &GetProcessGroupOK{}
}

/*GetProcessGroupOK handles this case with default header values.

successful operation
*/
type GetProcessGroupOK struct {
	Payload *models.ProcessGroupEntity
}

func (o *GetProcessGroupOK) Error() string {
	return fmt.Sprintf("[GET /process-groups/{id}][%d] getProcessGroupOK  %+v", 200, o.Payload)
}

func (o *GetProcessGroupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProcessGroupEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProcessGroupBadRequest creates a GetProcessGroupBadRequest with default headers values
func NewGetProcessGroupBadRequest() *GetProcessGroupBadRequest {
	return &GetProcessGroupBadRequest{}
}

/*GetProcessGroupBadRequest handles this case with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type GetProcessGroupBadRequest struct {
}

func (o *GetProcessGroupBadRequest) Error() string {
	return fmt.Sprintf("[GET /process-groups/{id}][%d] getProcessGroupBadRequest ", 400)
}

func (o *GetProcessGroupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetProcessGroupUnauthorized creates a GetProcessGroupUnauthorized with default headers values
func NewGetProcessGroupUnauthorized() *GetProcessGroupUnauthorized {
	return &GetProcessGroupUnauthorized{}
}

/*GetProcessGroupUnauthorized handles this case with default header values.

Client could not be authenticated.
*/
type GetProcessGroupUnauthorized struct {
}

func (o *GetProcessGroupUnauthorized) Error() string {
	return fmt.Sprintf("[GET /process-groups/{id}][%d] getProcessGroupUnauthorized ", 401)
}

func (o *GetProcessGroupUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetProcessGroupForbidden creates a GetProcessGroupForbidden with default headers values
func NewGetProcessGroupForbidden() *GetProcessGroupForbidden {
	return &GetProcessGroupForbidden{}
}

/*GetProcessGroupForbidden handles this case with default header values.

Client is not authorized to make this request.
*/
type GetProcessGroupForbidden struct {
}

func (o *GetProcessGroupForbidden) Error() string {
	return fmt.Sprintf("[GET /process-groups/{id}][%d] getProcessGroupForbidden ", 403)
}

func (o *GetProcessGroupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetProcessGroupNotFound creates a GetProcessGroupNotFound with default headers values
func NewGetProcessGroupNotFound() *GetProcessGroupNotFound {
	return &GetProcessGroupNotFound{}
}

/*GetProcessGroupNotFound handles this case with default header values.

The specified resource could not be found.
*/
type GetProcessGroupNotFound struct {
}

func (o *GetProcessGroupNotFound) Error() string {
	return fmt.Sprintf("[GET /process-groups/{id}][%d] getProcessGroupNotFound ", 404)
}

func (o *GetProcessGroupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetProcessGroupConflict creates a GetProcessGroupConflict with default headers values
func NewGetProcessGroupConflict() *GetProcessGroupConflict {
	return &GetProcessGroupConflict{}
}

/*GetProcessGroupConflict handles this case with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type GetProcessGroupConflict struct {
}

func (o *GetProcessGroupConflict) Error() string {
	return fmt.Sprintf("[GET /process-groups/{id}][%d] getProcessGroupConflict ", 409)
}

func (o *GetProcessGroupConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
