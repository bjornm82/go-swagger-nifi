// Code generated by go-swagger; DO NOT EDIT.

package process_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bjornm82/go-swagger-nifi/models"
)

// CreateControllerServiceProcessGroupsReader is a Reader for the CreateControllerServiceProcessGroups structure.
type CreateControllerServiceProcessGroupsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateControllerServiceProcessGroupsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateControllerServiceProcessGroupsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateControllerServiceProcessGroupsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateControllerServiceProcessGroupsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateControllerServiceProcessGroupsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateControllerServiceProcessGroupsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateControllerServiceProcessGroupsOK creates a CreateControllerServiceProcessGroupsOK with default headers values
func NewCreateControllerServiceProcessGroupsOK() *CreateControllerServiceProcessGroupsOK {
	return &CreateControllerServiceProcessGroupsOK{}
}

/*CreateControllerServiceProcessGroupsOK handles this case with default header values.

successful operation
*/
type CreateControllerServiceProcessGroupsOK struct {
	Payload *models.ControllerServiceEntity
}

func (o *CreateControllerServiceProcessGroupsOK) Error() string {
	return fmt.Sprintf("[POST /process-groups/{id}/controller-services][%d] createControllerServiceProcessGroupsOK  %+v", 200, o.Payload)
}

func (o *CreateControllerServiceProcessGroupsOK) GetPayload() *models.ControllerServiceEntity {
	return o.Payload
}

func (o *CreateControllerServiceProcessGroupsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ControllerServiceEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateControllerServiceProcessGroupsBadRequest creates a CreateControllerServiceProcessGroupsBadRequest with default headers values
func NewCreateControllerServiceProcessGroupsBadRequest() *CreateControllerServiceProcessGroupsBadRequest {
	return &CreateControllerServiceProcessGroupsBadRequest{}
}

/*CreateControllerServiceProcessGroupsBadRequest handles this case with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type CreateControllerServiceProcessGroupsBadRequest struct {
}

func (o *CreateControllerServiceProcessGroupsBadRequest) Error() string {
	return fmt.Sprintf("[POST /process-groups/{id}/controller-services][%d] createControllerServiceProcessGroupsBadRequest ", 400)
}

func (o *CreateControllerServiceProcessGroupsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateControllerServiceProcessGroupsUnauthorized creates a CreateControllerServiceProcessGroupsUnauthorized with default headers values
func NewCreateControllerServiceProcessGroupsUnauthorized() *CreateControllerServiceProcessGroupsUnauthorized {
	return &CreateControllerServiceProcessGroupsUnauthorized{}
}

/*CreateControllerServiceProcessGroupsUnauthorized handles this case with default header values.

Client could not be authenticated.
*/
type CreateControllerServiceProcessGroupsUnauthorized struct {
}

func (o *CreateControllerServiceProcessGroupsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /process-groups/{id}/controller-services][%d] createControllerServiceProcessGroupsUnauthorized ", 401)
}

func (o *CreateControllerServiceProcessGroupsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateControllerServiceProcessGroupsForbidden creates a CreateControllerServiceProcessGroupsForbidden with default headers values
func NewCreateControllerServiceProcessGroupsForbidden() *CreateControllerServiceProcessGroupsForbidden {
	return &CreateControllerServiceProcessGroupsForbidden{}
}

/*CreateControllerServiceProcessGroupsForbidden handles this case with default header values.

Client is not authorized to make this request.
*/
type CreateControllerServiceProcessGroupsForbidden struct {
}

func (o *CreateControllerServiceProcessGroupsForbidden) Error() string {
	return fmt.Sprintf("[POST /process-groups/{id}/controller-services][%d] createControllerServiceProcessGroupsForbidden ", 403)
}

func (o *CreateControllerServiceProcessGroupsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateControllerServiceProcessGroupsConflict creates a CreateControllerServiceProcessGroupsConflict with default headers values
func NewCreateControllerServiceProcessGroupsConflict() *CreateControllerServiceProcessGroupsConflict {
	return &CreateControllerServiceProcessGroupsConflict{}
}

/*CreateControllerServiceProcessGroupsConflict handles this case with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type CreateControllerServiceProcessGroupsConflict struct {
}

func (o *CreateControllerServiceProcessGroupsConflict) Error() string {
	return fmt.Sprintf("[POST /process-groups/{id}/controller-services][%d] createControllerServiceProcessGroupsConflict ", 409)
}

func (o *CreateControllerServiceProcessGroupsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
