// Code generated by go-swagger; DO NOT EDIT.

package versions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/bjornm82/swagger-nifi/models"
)

// VersionsDeleteUpdateRequestReader is a Reader for the VersionsDeleteUpdateRequest structure.
type VersionsDeleteUpdateRequestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *VersionsDeleteUpdateRequestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewVersionsDeleteUpdateRequestOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewVersionsDeleteUpdateRequestBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewVersionsDeleteUpdateRequestUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewVersionsDeleteUpdateRequestForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewVersionsDeleteUpdateRequestNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewVersionsDeleteUpdateRequestConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewVersionsDeleteUpdateRequestOK creates a VersionsDeleteUpdateRequestOK with default headers values
func NewVersionsDeleteUpdateRequestOK() *VersionsDeleteUpdateRequestOK {
	return &VersionsDeleteUpdateRequestOK{}
}

/*VersionsDeleteUpdateRequestOK handles this case with default header values.

successful operation
*/
type VersionsDeleteUpdateRequestOK struct {
	Payload *models.VersionedFlowUpdateRequestEntity
}

func (o *VersionsDeleteUpdateRequestOK) Error() string {
	return fmt.Sprintf("[DELETE /versions/update-requests/{id}][%d] versionsDeleteUpdateRequestOK  %+v", 200, o.Payload)
}

func (o *VersionsDeleteUpdateRequestOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VersionedFlowUpdateRequestEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVersionsDeleteUpdateRequestBadRequest creates a VersionsDeleteUpdateRequestBadRequest with default headers values
func NewVersionsDeleteUpdateRequestBadRequest() *VersionsDeleteUpdateRequestBadRequest {
	return &VersionsDeleteUpdateRequestBadRequest{}
}

/*VersionsDeleteUpdateRequestBadRequest handles this case with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type VersionsDeleteUpdateRequestBadRequest struct {
}

func (o *VersionsDeleteUpdateRequestBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /versions/update-requests/{id}][%d] versionsDeleteUpdateRequestBadRequest ", 400)
}

func (o *VersionsDeleteUpdateRequestBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewVersionsDeleteUpdateRequestUnauthorized creates a VersionsDeleteUpdateRequestUnauthorized with default headers values
func NewVersionsDeleteUpdateRequestUnauthorized() *VersionsDeleteUpdateRequestUnauthorized {
	return &VersionsDeleteUpdateRequestUnauthorized{}
}

/*VersionsDeleteUpdateRequestUnauthorized handles this case with default header values.

Client could not be authenticated.
*/
type VersionsDeleteUpdateRequestUnauthorized struct {
}

func (o *VersionsDeleteUpdateRequestUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /versions/update-requests/{id}][%d] versionsDeleteUpdateRequestUnauthorized ", 401)
}

func (o *VersionsDeleteUpdateRequestUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewVersionsDeleteUpdateRequestForbidden creates a VersionsDeleteUpdateRequestForbidden with default headers values
func NewVersionsDeleteUpdateRequestForbidden() *VersionsDeleteUpdateRequestForbidden {
	return &VersionsDeleteUpdateRequestForbidden{}
}

/*VersionsDeleteUpdateRequestForbidden handles this case with default header values.

Client is not authorized to make this request.
*/
type VersionsDeleteUpdateRequestForbidden struct {
}

func (o *VersionsDeleteUpdateRequestForbidden) Error() string {
	return fmt.Sprintf("[DELETE /versions/update-requests/{id}][%d] versionsDeleteUpdateRequestForbidden ", 403)
}

func (o *VersionsDeleteUpdateRequestForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewVersionsDeleteUpdateRequestNotFound creates a VersionsDeleteUpdateRequestNotFound with default headers values
func NewVersionsDeleteUpdateRequestNotFound() *VersionsDeleteUpdateRequestNotFound {
	return &VersionsDeleteUpdateRequestNotFound{}
}

/*VersionsDeleteUpdateRequestNotFound handles this case with default header values.

The specified resource could not be found.
*/
type VersionsDeleteUpdateRequestNotFound struct {
}

func (o *VersionsDeleteUpdateRequestNotFound) Error() string {
	return fmt.Sprintf("[DELETE /versions/update-requests/{id}][%d] versionsDeleteUpdateRequestNotFound ", 404)
}

func (o *VersionsDeleteUpdateRequestNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewVersionsDeleteUpdateRequestConflict creates a VersionsDeleteUpdateRequestConflict with default headers values
func NewVersionsDeleteUpdateRequestConflict() *VersionsDeleteUpdateRequestConflict {
	return &VersionsDeleteUpdateRequestConflict{}
}

/*VersionsDeleteUpdateRequestConflict handles this case with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type VersionsDeleteUpdateRequestConflict struct {
}

func (o *VersionsDeleteUpdateRequestConflict) Error() string {
	return fmt.Sprintf("[DELETE /versions/update-requests/{id}][%d] versionsDeleteUpdateRequestConflict ", 409)
}

func (o *VersionsDeleteUpdateRequestConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
