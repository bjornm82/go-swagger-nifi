// Code generated by go-swagger; DO NOT EDIT.

package versions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewDeleteVersionControlRequestParams creates a new DeleteVersionControlRequestParams object
// with the default values initialized.
func NewDeleteVersionControlRequestParams() *DeleteVersionControlRequestParams {
	var (
		disconnectedNodeAcknowledgedDefault = bool(false)
	)
	return &DeleteVersionControlRequestParams{
		DisconnectedNodeAcknowledged: &disconnectedNodeAcknowledgedDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteVersionControlRequestParamsWithTimeout creates a new DeleteVersionControlRequestParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteVersionControlRequestParamsWithTimeout(timeout time.Duration) *DeleteVersionControlRequestParams {
	var (
		disconnectedNodeAcknowledgedDefault = bool(false)
	)
	return &DeleteVersionControlRequestParams{
		DisconnectedNodeAcknowledged: &disconnectedNodeAcknowledgedDefault,

		timeout: timeout,
	}
}

// NewDeleteVersionControlRequestParamsWithContext creates a new DeleteVersionControlRequestParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteVersionControlRequestParamsWithContext(ctx context.Context) *DeleteVersionControlRequestParams {
	var (
		disconnectedNodeAcknowledgedDefault = bool(false)
	)
	return &DeleteVersionControlRequestParams{
		DisconnectedNodeAcknowledged: &disconnectedNodeAcknowledgedDefault,

		Context: ctx,
	}
}

// NewDeleteVersionControlRequestParamsWithHTTPClient creates a new DeleteVersionControlRequestParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteVersionControlRequestParamsWithHTTPClient(client *http.Client) *DeleteVersionControlRequestParams {
	var (
		disconnectedNodeAcknowledgedDefault = bool(false)
	)
	return &DeleteVersionControlRequestParams{
		DisconnectedNodeAcknowledged: &disconnectedNodeAcknowledgedDefault,
		HTTPClient:                   client,
	}
}

/*DeleteVersionControlRequestParams contains all the parameters to send to the API endpoint
for the delete version control request operation typically these are written to a http.Request
*/
type DeleteVersionControlRequestParams struct {

	/*DisconnectedNodeAcknowledged
	  Acknowledges that this node is disconnected to allow for mutable requests to proceed.

	*/
	DisconnectedNodeAcknowledged *bool
	/*ID
	  The request ID.

	*/
	ID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete version control request params
func (o *DeleteVersionControlRequestParams) WithTimeout(timeout time.Duration) *DeleteVersionControlRequestParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete version control request params
func (o *DeleteVersionControlRequestParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete version control request params
func (o *DeleteVersionControlRequestParams) WithContext(ctx context.Context) *DeleteVersionControlRequestParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete version control request params
func (o *DeleteVersionControlRequestParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete version control request params
func (o *DeleteVersionControlRequestParams) WithHTTPClient(client *http.Client) *DeleteVersionControlRequestParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete version control request params
func (o *DeleteVersionControlRequestParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDisconnectedNodeAcknowledged adds the disconnectedNodeAcknowledged to the delete version control request params
func (o *DeleteVersionControlRequestParams) WithDisconnectedNodeAcknowledged(disconnectedNodeAcknowledged *bool) *DeleteVersionControlRequestParams {
	o.SetDisconnectedNodeAcknowledged(disconnectedNodeAcknowledged)
	return o
}

// SetDisconnectedNodeAcknowledged adds the disconnectedNodeAcknowledged to the delete version control request params
func (o *DeleteVersionControlRequestParams) SetDisconnectedNodeAcknowledged(disconnectedNodeAcknowledged *bool) {
	o.DisconnectedNodeAcknowledged = disconnectedNodeAcknowledged
}

// WithID adds the id to the delete version control request params
func (o *DeleteVersionControlRequestParams) WithID(id string) *DeleteVersionControlRequestParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the delete version control request params
func (o *DeleteVersionControlRequestParams) SetID(id string) {
	o.ID = id
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteVersionControlRequestParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.DisconnectedNodeAcknowledged != nil {

		// query param disconnectedNodeAcknowledged
		var qrDisconnectedNodeAcknowledged bool
		if o.DisconnectedNodeAcknowledged != nil {
			qrDisconnectedNodeAcknowledged = *o.DisconnectedNodeAcknowledged
		}
		qDisconnectedNodeAcknowledged := swag.FormatBool(qrDisconnectedNodeAcknowledged)
		if qDisconnectedNodeAcknowledged != "" {
			if err := r.SetQueryParam("disconnectedNodeAcknowledged", qDisconnectedNodeAcknowledged); err != nil {
				return err
			}
		}

	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
