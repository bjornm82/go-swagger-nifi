// Code generated by go-swagger; DO NOT EDIT.

package versions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bjornm82/go-swagger-nifi/models"
)

// DeleteUpdateRequestVersionsReader is a Reader for the DeleteUpdateRequestVersions structure.
type DeleteUpdateRequestVersionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteUpdateRequestVersionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteUpdateRequestVersionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteUpdateRequestVersionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteUpdateRequestVersionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteUpdateRequestVersionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteUpdateRequestVersionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDeleteUpdateRequestVersionsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteUpdateRequestVersionsOK creates a DeleteUpdateRequestVersionsOK with default headers values
func NewDeleteUpdateRequestVersionsOK() *DeleteUpdateRequestVersionsOK {
	return &DeleteUpdateRequestVersionsOK{}
}

/*DeleteUpdateRequestVersionsOK handles this case with default header values.

successful operation
*/
type DeleteUpdateRequestVersionsOK struct {
	Payload *models.VersionedFlowUpdateRequestEntity
}

func (o *DeleteUpdateRequestVersionsOK) Error() string {
	return fmt.Sprintf("[DELETE /versions/update-requests/{id}][%d] deleteUpdateRequestVersionsOK  %+v", 200, o.Payload)
}

func (o *DeleteUpdateRequestVersionsOK) GetPayload() *models.VersionedFlowUpdateRequestEntity {
	return o.Payload
}

func (o *DeleteUpdateRequestVersionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VersionedFlowUpdateRequestEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUpdateRequestVersionsBadRequest creates a DeleteUpdateRequestVersionsBadRequest with default headers values
func NewDeleteUpdateRequestVersionsBadRequest() *DeleteUpdateRequestVersionsBadRequest {
	return &DeleteUpdateRequestVersionsBadRequest{}
}

/*DeleteUpdateRequestVersionsBadRequest handles this case with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type DeleteUpdateRequestVersionsBadRequest struct {
}

func (o *DeleteUpdateRequestVersionsBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /versions/update-requests/{id}][%d] deleteUpdateRequestVersionsBadRequest ", 400)
}

func (o *DeleteUpdateRequestVersionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteUpdateRequestVersionsUnauthorized creates a DeleteUpdateRequestVersionsUnauthorized with default headers values
func NewDeleteUpdateRequestVersionsUnauthorized() *DeleteUpdateRequestVersionsUnauthorized {
	return &DeleteUpdateRequestVersionsUnauthorized{}
}

/*DeleteUpdateRequestVersionsUnauthorized handles this case with default header values.

Client could not be authenticated.
*/
type DeleteUpdateRequestVersionsUnauthorized struct {
}

func (o *DeleteUpdateRequestVersionsUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /versions/update-requests/{id}][%d] deleteUpdateRequestVersionsUnauthorized ", 401)
}

func (o *DeleteUpdateRequestVersionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteUpdateRequestVersionsForbidden creates a DeleteUpdateRequestVersionsForbidden with default headers values
func NewDeleteUpdateRequestVersionsForbidden() *DeleteUpdateRequestVersionsForbidden {
	return &DeleteUpdateRequestVersionsForbidden{}
}

/*DeleteUpdateRequestVersionsForbidden handles this case with default header values.

Client is not authorized to make this request.
*/
type DeleteUpdateRequestVersionsForbidden struct {
}

func (o *DeleteUpdateRequestVersionsForbidden) Error() string {
	return fmt.Sprintf("[DELETE /versions/update-requests/{id}][%d] deleteUpdateRequestVersionsForbidden ", 403)
}

func (o *DeleteUpdateRequestVersionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteUpdateRequestVersionsNotFound creates a DeleteUpdateRequestVersionsNotFound with default headers values
func NewDeleteUpdateRequestVersionsNotFound() *DeleteUpdateRequestVersionsNotFound {
	return &DeleteUpdateRequestVersionsNotFound{}
}

/*DeleteUpdateRequestVersionsNotFound handles this case with default header values.

The specified resource could not be found.
*/
type DeleteUpdateRequestVersionsNotFound struct {
}

func (o *DeleteUpdateRequestVersionsNotFound) Error() string {
	return fmt.Sprintf("[DELETE /versions/update-requests/{id}][%d] deleteUpdateRequestVersionsNotFound ", 404)
}

func (o *DeleteUpdateRequestVersionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteUpdateRequestVersionsConflict creates a DeleteUpdateRequestVersionsConflict with default headers values
func NewDeleteUpdateRequestVersionsConflict() *DeleteUpdateRequestVersionsConflict {
	return &DeleteUpdateRequestVersionsConflict{}
}

/*DeleteUpdateRequestVersionsConflict handles this case with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type DeleteUpdateRequestVersionsConflict struct {
}

func (o *DeleteUpdateRequestVersionsConflict) Error() string {
	return fmt.Sprintf("[DELETE /versions/update-requests/{id}][%d] deleteUpdateRequestVersionsConflict ", 409)
}

func (o *DeleteUpdateRequestVersionsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
