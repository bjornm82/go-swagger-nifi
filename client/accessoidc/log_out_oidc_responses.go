// Code generated by go-swagger; DO NOT EDIT.

package accessoidc

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// LogOutOidcReader is a Reader for the LogOutOidc structure.
type LogOutOidcReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LogOutOidcReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLogOutOidcOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewLogOutOidcUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewLogOutOidcInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewLogOutOidcOK creates a LogOutOidcOK with default headers values
func NewLogOutOidcOK() *LogOutOidcOK {
	return &LogOutOidcOK{}
}

/*LogOutOidcOK handles this case with default header values.

User was logged out successfully.
*/
type LogOutOidcOK struct {
}

func (o *LogOutOidcOK) Error() string {
	return fmt.Sprintf("[DELETE /access/oidc/logout][%d] logOutOidcOK ", 200)
}

func (o *LogOutOidcOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLogOutOidcUnauthorized creates a LogOutOidcUnauthorized with default headers values
func NewLogOutOidcUnauthorized() *LogOutOidcUnauthorized {
	return &LogOutOidcUnauthorized{}
}

/*LogOutOidcUnauthorized handles this case with default header values.

Authentication token provided was empty or not in the correct JWT format.
*/
type LogOutOidcUnauthorized struct {
}

func (o *LogOutOidcUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /access/oidc/logout][%d] logOutOidcUnauthorized ", 401)
}

func (o *LogOutOidcUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLogOutOidcInternalServerError creates a LogOutOidcInternalServerError with default headers values
func NewLogOutOidcInternalServerError() *LogOutOidcInternalServerError {
	return &LogOutOidcInternalServerError{}
}

/*LogOutOidcInternalServerError handles this case with default header values.

Client failed to log out.
*/
type LogOutOidcInternalServerError struct {
}

func (o *LogOutOidcInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /access/oidc/logout][%d] logOutOidcInternalServerError ", 500)
}

func (o *LogOutOidcInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
