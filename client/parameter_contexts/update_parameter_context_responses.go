// Code generated by go-swagger; DO NOT EDIT.

package parameter_contexts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/bjornm82/swagger-nifi/models"
)

// UpdateParameterContextReader is a Reader for the UpdateParameterContext structure.
type UpdateParameterContextReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateParameterContextReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUpdateParameterContextOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewUpdateParameterContextBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewUpdateParameterContextUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewUpdateParameterContextForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewUpdateParameterContextNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewUpdateParameterContextConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateParameterContextOK creates a UpdateParameterContextOK with default headers values
func NewUpdateParameterContextOK() *UpdateParameterContextOK {
	return &UpdateParameterContextOK{}
}

/*UpdateParameterContextOK handles this case with default header values.

successful operation
*/
type UpdateParameterContextOK struct {
	Payload *models.ParameterContextEntity
}

func (o *UpdateParameterContextOK) Error() string {
	return fmt.Sprintf("[PUT /parameter-contexts/{id}][%d] updateParameterContextOK  %+v", 200, o.Payload)
}

func (o *UpdateParameterContextOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ParameterContextEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateParameterContextBadRequest creates a UpdateParameterContextBadRequest with default headers values
func NewUpdateParameterContextBadRequest() *UpdateParameterContextBadRequest {
	return &UpdateParameterContextBadRequest{}
}

/*UpdateParameterContextBadRequest handles this case with default header values.

NiFi was unable to complete the request because it was invalid. The request should not be retried without modification.
*/
type UpdateParameterContextBadRequest struct {
}

func (o *UpdateParameterContextBadRequest) Error() string {
	return fmt.Sprintf("[PUT /parameter-contexts/{id}][%d] updateParameterContextBadRequest ", 400)
}

func (o *UpdateParameterContextBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateParameterContextUnauthorized creates a UpdateParameterContextUnauthorized with default headers values
func NewUpdateParameterContextUnauthorized() *UpdateParameterContextUnauthorized {
	return &UpdateParameterContextUnauthorized{}
}

/*UpdateParameterContextUnauthorized handles this case with default header values.

Client could not be authenticated.
*/
type UpdateParameterContextUnauthorized struct {
}

func (o *UpdateParameterContextUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /parameter-contexts/{id}][%d] updateParameterContextUnauthorized ", 401)
}

func (o *UpdateParameterContextUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateParameterContextForbidden creates a UpdateParameterContextForbidden with default headers values
func NewUpdateParameterContextForbidden() *UpdateParameterContextForbidden {
	return &UpdateParameterContextForbidden{}
}

/*UpdateParameterContextForbidden handles this case with default header values.

Client is not authorized to make this request.
*/
type UpdateParameterContextForbidden struct {
}

func (o *UpdateParameterContextForbidden) Error() string {
	return fmt.Sprintf("[PUT /parameter-contexts/{id}][%d] updateParameterContextForbidden ", 403)
}

func (o *UpdateParameterContextForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateParameterContextNotFound creates a UpdateParameterContextNotFound with default headers values
func NewUpdateParameterContextNotFound() *UpdateParameterContextNotFound {
	return &UpdateParameterContextNotFound{}
}

/*UpdateParameterContextNotFound handles this case with default header values.

The specified resource could not be found.
*/
type UpdateParameterContextNotFound struct {
}

func (o *UpdateParameterContextNotFound) Error() string {
	return fmt.Sprintf("[PUT /parameter-contexts/{id}][%d] updateParameterContextNotFound ", 404)
}

func (o *UpdateParameterContextNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateParameterContextConflict creates a UpdateParameterContextConflict with default headers values
func NewUpdateParameterContextConflict() *UpdateParameterContextConflict {
	return &UpdateParameterContextConflict{}
}

/*UpdateParameterContextConflict handles this case with default header values.

The request was valid but NiFi was not in the appropriate state to process it. Retrying the same request later may be successful.
*/
type UpdateParameterContextConflict struct {
}

func (o *UpdateParameterContextConflict) Error() string {
	return fmt.Sprintf("[PUT /parameter-contexts/{id}][%d] updateParameterContextConflict ", 409)
}

func (o *UpdateParameterContextConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
