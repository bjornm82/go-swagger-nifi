// Code generated by go-swagger; DO NOT EDIT.

package parameter_contexts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewParameterContextsDeleteUpdateRequestParams creates a new ParameterContextsDeleteUpdateRequestParams object
// with the default values initialized.
func NewParameterContextsDeleteUpdateRequestParams() *ParameterContextsDeleteUpdateRequestParams {
	var (
		disconnectedNodeAcknowledgedDefault = bool(false)
	)
	return &ParameterContextsDeleteUpdateRequestParams{
		DisconnectedNodeAcknowledged: &disconnectedNodeAcknowledgedDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewParameterContextsDeleteUpdateRequestParamsWithTimeout creates a new ParameterContextsDeleteUpdateRequestParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewParameterContextsDeleteUpdateRequestParamsWithTimeout(timeout time.Duration) *ParameterContextsDeleteUpdateRequestParams {
	var (
		disconnectedNodeAcknowledgedDefault = bool(false)
	)
	return &ParameterContextsDeleteUpdateRequestParams{
		DisconnectedNodeAcknowledged: &disconnectedNodeAcknowledgedDefault,

		timeout: timeout,
	}
}

// NewParameterContextsDeleteUpdateRequestParamsWithContext creates a new ParameterContextsDeleteUpdateRequestParams object
// with the default values initialized, and the ability to set a context for a request
func NewParameterContextsDeleteUpdateRequestParamsWithContext(ctx context.Context) *ParameterContextsDeleteUpdateRequestParams {
	var (
		disconnectedNodeAcknowledgedDefault = bool(false)
	)
	return &ParameterContextsDeleteUpdateRequestParams{
		DisconnectedNodeAcknowledged: &disconnectedNodeAcknowledgedDefault,

		Context: ctx,
	}
}

// NewParameterContextsDeleteUpdateRequestParamsWithHTTPClient creates a new ParameterContextsDeleteUpdateRequestParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewParameterContextsDeleteUpdateRequestParamsWithHTTPClient(client *http.Client) *ParameterContextsDeleteUpdateRequestParams {
	var (
		disconnectedNodeAcknowledgedDefault = bool(false)
	)
	return &ParameterContextsDeleteUpdateRequestParams{
		DisconnectedNodeAcknowledged: &disconnectedNodeAcknowledgedDefault,
		HTTPClient:                   client,
	}
}

/*ParameterContextsDeleteUpdateRequestParams contains all the parameters to send to the API endpoint
for the parameter contexts delete update request operation typically these are written to a http.Request
*/
type ParameterContextsDeleteUpdateRequestParams struct {

	/*ContextID
	  The ID of the ParameterContext

	*/
	ContextID string
	/*DisconnectedNodeAcknowledged
	  Acknowledges that this node is disconnected to allow for mutable requests to proceed.

	*/
	DisconnectedNodeAcknowledged *bool
	/*RequestID
	  The ID of the Update Request

	*/
	RequestID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the parameter contexts delete update request params
func (o *ParameterContextsDeleteUpdateRequestParams) WithTimeout(timeout time.Duration) *ParameterContextsDeleteUpdateRequestParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the parameter contexts delete update request params
func (o *ParameterContextsDeleteUpdateRequestParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the parameter contexts delete update request params
func (o *ParameterContextsDeleteUpdateRequestParams) WithContext(ctx context.Context) *ParameterContextsDeleteUpdateRequestParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the parameter contexts delete update request params
func (o *ParameterContextsDeleteUpdateRequestParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the parameter contexts delete update request params
func (o *ParameterContextsDeleteUpdateRequestParams) WithHTTPClient(client *http.Client) *ParameterContextsDeleteUpdateRequestParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the parameter contexts delete update request params
func (o *ParameterContextsDeleteUpdateRequestParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithContextID adds the contextID to the parameter contexts delete update request params
func (o *ParameterContextsDeleteUpdateRequestParams) WithContextID(contextID string) *ParameterContextsDeleteUpdateRequestParams {
	o.SetContextID(contextID)
	return o
}

// SetContextID adds the contextId to the parameter contexts delete update request params
func (o *ParameterContextsDeleteUpdateRequestParams) SetContextID(contextID string) {
	o.ContextID = contextID
}

// WithDisconnectedNodeAcknowledged adds the disconnectedNodeAcknowledged to the parameter contexts delete update request params
func (o *ParameterContextsDeleteUpdateRequestParams) WithDisconnectedNodeAcknowledged(disconnectedNodeAcknowledged *bool) *ParameterContextsDeleteUpdateRequestParams {
	o.SetDisconnectedNodeAcknowledged(disconnectedNodeAcknowledged)
	return o
}

// SetDisconnectedNodeAcknowledged adds the disconnectedNodeAcknowledged to the parameter contexts delete update request params
func (o *ParameterContextsDeleteUpdateRequestParams) SetDisconnectedNodeAcknowledged(disconnectedNodeAcknowledged *bool) {
	o.DisconnectedNodeAcknowledged = disconnectedNodeAcknowledged
}

// WithRequestID adds the requestID to the parameter contexts delete update request params
func (o *ParameterContextsDeleteUpdateRequestParams) WithRequestID(requestID string) *ParameterContextsDeleteUpdateRequestParams {
	o.SetRequestID(requestID)
	return o
}

// SetRequestID adds the requestId to the parameter contexts delete update request params
func (o *ParameterContextsDeleteUpdateRequestParams) SetRequestID(requestID string) {
	o.RequestID = requestID
}

// WriteToRequest writes these params to a swagger request
func (o *ParameterContextsDeleteUpdateRequestParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param contextId
	if err := r.SetPathParam("contextId", o.ContextID); err != nil {
		return err
	}

	if o.DisconnectedNodeAcknowledged != nil {

		// query param disconnectedNodeAcknowledged
		var qrDisconnectedNodeAcknowledged bool
		if o.DisconnectedNodeAcknowledged != nil {
			qrDisconnectedNodeAcknowledged = *o.DisconnectedNodeAcknowledged
		}
		qDisconnectedNodeAcknowledged := swag.FormatBool(qrDisconnectedNodeAcknowledged)
		if qDisconnectedNodeAcknowledged != "" {
			if err := r.SetQueryParam("disconnectedNodeAcknowledged", qDisconnectedNodeAcknowledged); err != nil {
				return err
			}
		}

	}

	// path param requestId
	if err := r.SetPathParam("requestId", o.RequestID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
